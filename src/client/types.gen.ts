// This file is auto-generated by @hey-api/openapi-ts

export type AddAgentDto = {
  brandName?: string | null;
  persianBrandName?: string | null;
  agentAdminId?: bigint;
  brandAddress?: string | null;
  agentPercent?: number;
  userPercent?: number;
  addTransactionDetail?: AddTransactionDetailDto;
};

export type AddAppleIdDto = {
  appleIdTypeId: bigint;
  email: string;
  phone?: string | null;
  password: string;
  comparePassword: string;
  birthDay: Date;
  question1: string;
  answer1: string;
  question2: string;
  answer2: string;
  question3: string;
  answer3: string;
};

export type AddCategoryDto = {
  title?: string | null;
};

export type AddCategoryDtoApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: AddCategoryDto;
};

export type AddCountryDto = {
  name: string;
};

export type AddInbound = {
  up?: bigint;
  down?: bigint;
  total?: bigint;
  listen?: string | null;
  remark?: string | null;
  enable?: boolean;
  port?: bigint;
  expiryTime?: bigint;
  protocol?: string | null;
  settings?: string | null;
  streamSettings?: string | null;
  sniffing?: string | null;
};

export type AddInboundDto = {
  serverId?: bigint;
  inbound?: AddInbound;
};

export type AddMarzbanNodeDto = {
  name?: string | null;
  address?: string | null;
  port?: number;
  api_Port?: number;
  add_As_New_Host?: boolean;
  usage_Coefficient?: number;
};

export type AddMarzbanServerDto = {
  serverName: string;
  serverIp: string;
  serverPort: string;
  ssl?: boolean;
  path?: string | null;
  userName: string;
  password: string;
  users?: bigint;
};

export type AddMarzbanVpnDto = {
  name: string;
  gbMax: number;
  gbMin: number;
  gbPrice: bigint;
  dayMax: number;
  dayMin: number;
  dayPrice: bigint;
  test_Active?: boolean;
  test_Days?: number;
  test_TotalMg?: number;
  vmess?: Array<string> | null;
  vless?: Array<string> | null;
  shadowsocks?: Array<string> | null;
  trojan?: Array<string> | null;
  marzbanServerId?: bigint;
};

export type AddMarzbanVpnTemplatesDto = {
  title: string;
  price?: bigint;
  days?: number;
  gb?: number;
  marzbanVpnId?: bigint;
};

export type AddMenuDto = {
  parentId?: bigint | null;
  title: string;
  active?: boolean;
  icon?: string | null;
  link?: string | null;
  sorted?: number;
};

export type AddNotificationDto = {
  message?: string | null;
  expire?: Date;
  notificationType?: NotificationType;
  forAllMember?: boolean;
  userId?: bigint | null;
  buttons?: Array<ButtonJsonDto> | null;
  fileAddress?: string | null;
  fileCaption?: string | null;
  forward?: boolean;
  forwardChatId?: bigint | null;
  messageId?: number | null;
};

export type AddProductDto = {
  productName: string;
  price: bigint;
  categoryId?: bigint;
  description?: string | null;
  productType?: ProductType;
};

export type AddProductToOrderDto = {
  productId?: bigint;
  count?: number;
};

export type AddRegistryDto = {
  imeI_1: string;
  imeI_2?: string | null;
  acceptTheRules: boolean;
  summery?: string | null;
  forWho?: string | null;
  phone: string;
};

export type AddRequestAgentDto = {
  brandName?: string | null;
  persianBrandName?: string | null;
  brandAddress?: string | null;
  agentPercent?: bigint;
  userPercent?: bigint;
  description?: string | null;
  phone?: string | null;
  transactionDetial?: AddTransactionDetailDto;
};

export type AddServerDto = {
  serverName: string;
  serverAddress: string;
  userName: string;
  password: string;
  port: string;
  subPort?: string | null;
  subPath: string;
  subDomain: string;
  serverStatus?: ServerStatus;
  countryId?: bigint;
};

export type AddTelegramBotDto = {
  token?: string | null;
  name?: string | null;
  persionName?: string | null;
  description?: string | null;
  route?: string | null;
  hostAddress?: string | null;
  secretToken?: string | null;
  link?: string | null;
  agentId?: bigint;
  botId?: bigint;
};

export type AddTransactionDetailDto = {
  maximumAmountForAgent?: bigint;
  minimalAmountForAgent?: bigint;
  maximumAmountForUser?: bigint;
  minimalAmountForUser?: bigint;
  cardNumber?: string | null;
  cardHolderName?: string | null;
  description?: string | null;
  agentId?: bigint;
};

export type AddTransactionDto = {
  title?: string | null;
  price: bigint;
  description?: string | null;
  transactionType: TransactionType;
  accountName?: string | null;
  transactionTime?: Date;
  cardNumber?: string | null;
  bankName?: string | null;
  avatarTransaction?: (Blob | File) | null;
  transactionDetailId?: bigint;
};

export type AgencyInformationDto = {
  id?: bigint;
  brandName?: string | null;
  persianBrandName?: string | null;
  agentAdminId?: bigint;
  agentCode?: bigint;
  brandAddress?: string | null;
  transactionDetailId?: bigint;
  agentPercent?: bigint;
  userPercent?: bigint;
  allowNegative?: boolean;
  maximumAmountForAgent?: bigint;
  minimalAmountForAgent?: bigint;
  maximumAmountForUser?: bigint;
  minimalAmountForUser?: bigint;
  cardNumber?: string | null;
  cardHolderName?: string | null;
  description?: string | null;
};

export type AgencyInformationDtoApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: AgencyInformationDto;
};

export type AgentDto = {
  disabledAccountTime?: Date | null;
  agentPath?: HierarchyId;
  id?: bigint;
  brandName?: string | null;
  persianBrandName?: string | null;
  agentAdminId?: bigint;
  agentCode?: bigint;
  brandAddress?: string | null;
  agentRequestStatus?: string | null;
  transactionDetailId?: bigint;
  agentPercent?: bigint;
  userPercent?: bigint;
  specialPercent?: bigint;
  user?: UserDto;
  allowNegative?: boolean;
  amountWithNegative?: bigint;
  negativeChargeCeiling?: bigint;
};

export type AgentDtoApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: AgentDto;
};

export type AgentDtoListApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: Array<AgentDto> | null;
};

export type AgentIncomeDto = {
  agentId?: bigint;
  profit?: bigint;
  userId?: bigint;
  createDate?: Date;
};

export type AgentRequestDto = {
  createDate?: Date;
  userId?: bigint;
  userName?: string | null;
  brandName?: string | null;
  persianBrandName?: string | null;
  brandAddress?: string | null;
  agentPercent?: bigint;
  userPercent?: bigint;
  description?: string | null;
  maximumAmount?: number;
  minimalAmount?: number;
  cardNumber?: string | null;
  cardHolderName?: string | null;
  paymentDescription?: string | null;
  agentRequestStatus?: string | null;
  id?: bigint;
};

export type AgentRequestDtoListApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: Array<AgentRequestDto> | null;
};

export type AgentTreeDto = {
  id?: bigint;
  brandName?: string | null;
  adminName?: string | null;
  mobile?: string | null;
  email?: string | null;
  persianBrandName?: string | null;
  agentAdminId?: bigint;
  agentCode?: bigint;
  brandAddress?: string | null;
  agentPercent?: bigint;
  userPercent?: bigint;
  cardNumber?: string | null;
  agentRequestStatus?: string | null;
  telegramBotId?: bigint | null;
  subAgents?: Array<AgentTreeDto> | null;
};

export type AgentTreeDtoApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: AgentTreeDto;
};

export type AgentsIncomesDetailByPriceDto = {
  agentsIncomesDetail?: Array<AgentsIncomesDetailDto> | null;
  price?: bigint;
  dayPrice?: bigint;
  gbPrice?: bigint;
};

export type AgentsIncomesDetailDto = {
  agentId?: bigint;
  profit?: bigint;
  orderDetailId?: bigint;
};

export type Animation = {
  fileId?: string | null;
  fileUniqueId?: string | null;
  fileSize?: bigint | null;
  width?: number;
  height?: number;
  duration?: number;
  thumbnail?: PhotoSize;
  fileName?: string | null;
  mimeType?: string | null;
};

export type ApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
};

export enum ApiResultStatusCode {
  _0 = 0,
  _1 = 1,
  _2 = 2,
  _3 = 3,
  _4 = 4,
  _5 = 5,
  _6 = 6,
  _7 = 7,
  _8 = 8,
  _9 = 9,
  "_-99" = -99,
  "_-5" = -5,
  "_-4" = -4,
  "_-3" = -3,
  "_-2" = -2,
  "_-1" = -1,
}

export type AppleId = {
  id?: bigint;
  createDate?: Date;
  modifiedDate?: Date;
  createBy?: bigint;
  modifyBy?: bigint;
  isDelete?: boolean;
  appleIdTypeId?: bigint;
  appleIdType?: AppleIdType;
  email?: string | null;
  phone?: string | null;
  password?: string | null;
  birthDay?: Date | null;
  question1?: string | null;
  answer1?: string | null;
  question2?: string | null;
  answer2?: string | null;
  question3?: string | null;
  answer3?: string | null;
  userId?: bigint | null;
  orderId?: bigint | null;
  assignSupporterUserId?: bigint | null;
  sendToWarranty?: boolean;
  status?: AppleIdStatus;
};

export type AppleIdDto = {
  id?: bigint;
  status?: AppleIdStatus;
  email?: string | null;
  phone?: string | null;
  password?: string | null;
  birthDay?: Date | null;
  question1?: string | null;
  answer1?: string | null;
  question2?: string | null;
  answer2?: string | null;
  question3?: string | null;
  answer3?: string | null;
  userId?: bigint | null;
  orderId?: bigint | null;
  createBy?: string | null;
  modifyBy?: string | null;
  createDate?: Date;
  modifiedDate?: Date;
  appleIdTypeId?: bigint;
  sendToWarranty?: boolean;
  buyer?: string | null;
};

export enum AppleIdStatus {
  _0 = 0,
  _1 = 1,
  _2 = 2,
  _3 = 3,
  _4 = 4,
  _5 = 5,
}

export type AppleIdType = {
  id?: bigint;
  createDate?: Date;
  modifiedDate?: Date;
  createBy?: bigint;
  modifyBy?: bigint;
  isDelete?: boolean;
  productId?: bigint;
  product?: Product;
  title?: string | null;
  price?: bigint;
  warranty?: boolean;
  warrantyDay?: number;
  appleIds?: Array<AppleId> | null;
};

export type Audio = {
  fileId?: string | null;
  fileUniqueId?: string | null;
  fileSize?: bigint | null;
  duration?: number;
  performer?: string | null;
  title?: string | null;
  fileName?: string | null;
  mimeType?: string | null;
  thumbnail?: PhotoSize;
};

export type ButtonJsonDto = {
  text?: string | null;
  callbackQuery?: string | null;
};

export type BuyMarzbanVpnDto = {
  count?: number;
  title: string;
  marzbanVpnId?: bigint;
  totalGb?: number;
  totalDay?: number;
  marzbanVpnTemplateId?: bigint | null;
  marzbanUserId?: bigint | null;
};

export type CallbackGame = {
  [key: string]: never;
};

export type CallbackQuery = {
  id?: string | null;
  from?: User;
  message?: Message;
  inlineMessageId?: string | null;
  chatInstance?: string | null;
  data?: string | null;
  gameShortName?: string | null;
  readonly isGameQuery?: boolean;
};

export type Category = {
  id?: bigint;
  createDate?: Date;
  modifiedDate?: Date;
  createBy?: bigint;
  modifyBy?: bigint;
  isDelete?: boolean;
  title?: string | null;
  categoryType?: CategoryType;
  products?: Array<Product> | null;
};

export type CategoryDto = {
  title?: string | null;
  id?: bigint;
};

export type CategoryDtoApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: CategoryDto;
};

export type CategoryDtoListApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: Array<CategoryDto> | null;
};

export enum CategoryType {
  _0 = 0,
  _1 = 1,
  _2 = 2,
}

export type Chat = {
  id?: bigint;
  type?: ChatType;
  title?: string | null;
  username?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  isForum?: boolean | null;
  photo?: ChatPhoto;
  activeUsernames?: Array<string> | null;
  emojiStatusCustomEmojiId?: string | null;
  bio?: string | null;
  hasPrivateForwards?: boolean | null;
  hasRestrictedVoiceAndVideoMessages?: boolean | null;
  joinToSendMessages?: boolean | null;
  joinByRequest?: boolean | null;
  description?: string | null;
  inviteLink?: string | null;
  pinnedMessage?: Message;
  permissions?: ChatPermissions;
  slowModeDelay?: number | null;
  messageAutoDeleteTime?: number | null;
  hasAggressiveAntiSpamEnabled?: boolean | null;
  hasHiddenMembers?: boolean | null;
  hasProtectedContent?: boolean | null;
  stickerSetName?: string | null;
  canSetStickerSet?: boolean | null;
  linkedChatId?: bigint | null;
  location?: ChatLocation;
};

export type ChatInviteLink = {
  inviteLink?: string | null;
  creator?: User;
  createsJoinRequest?: boolean;
  isPrimary?: boolean;
  isRevoked?: boolean;
  name?: string | null;
  expireDate?: Date | null;
  memberLimit?: number | null;
  pendingJoinRequestCount?: number | null;
};

export type ChatJoinRequest = {
  chat?: Chat;
  from?: User;
  userChatId?: bigint;
  date?: Date;
  bio?: string | null;
  inviteLink?: ChatInviteLink;
};

export type ChatLocation = {
  location?: Location;
  address?: string | null;
};

export type ChatMember = {
  status?: ChatMemberStatus;
  user?: User;
};

export enum ChatMemberStatus {
  _1 = 1,
  _2 = 2,
  _3 = 3,
  _4 = 4,
  _5 = 5,
  _6 = 6,
}

export type ChatMemberUpdated = {
  chat?: Chat;
  from?: User;
  date?: Date;
  oldChatMember?: ChatMember;
  newChatMember?: ChatMember;
  inviteLink?: ChatInviteLink;
  viaChatFolderInviteLink?: boolean | null;
};

export type ChatPermissions = {
  canSendMessages?: boolean | null;
  canSendAudios?: boolean | null;
  canSendDocuments?: boolean | null;
  canSendPhotos?: boolean | null;
  canSendVideos?: boolean | null;
  canSendVideoNotes?: boolean | null;
  canSendVoiceNotes?: boolean | null;
  canSendPolls?: boolean | null;
  canSendOtherMessages?: boolean | null;
  canAddWebPagePreviews?: boolean | null;
  canChangeInfo?: boolean | null;
  canInviteUsers?: boolean | null;
  canPinMessages?: boolean | null;
  canManageTopics?: boolean | null;
};

export type ChatPhoto = {
  smallFileId?: string | null;
  smallFileUniqueId?: string | null;
  bigFileId?: string | null;
  bigFileUniqueId?: string | null;
};

export type ChatShared = {
  requestId?: number;
  chatId?: bigint;
};

export enum ChatType {
  _1 = 1,
  _2 = 2,
  _3 = 3,
  _4 = 4,
  _5 = 5,
}

export type ChosenInlineResult = {
  resultId?: string | null;
  from?: User;
  location?: Location;
  inlineMessageId?: string | null;
  query?: string | null;
};

export type ClientDto = {
  id?: bigint;
  inboundId?: bigint;
  enable?: boolean;
  email?: string | null;
  up?: bigint;
  down?: bigint;
  expiryTime?: bigint;
  total?: bigint;
  reset?: bigint;
};

export type ClientInOrder = {
  name?: string | null;
  link?: string | null;
  id?: bigint;
};

export type Contact = {
  phoneNumber?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  userId?: bigint | null;
  vcard?: string | null;
};

export type CountryDto = {
  name: string;
  id?: bigint;
};

export type CountryDtoListApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: Array<CountryDto> | null;
};

export type Dice = {
  emoji?: string | null;
  value?: number;
};

export type Document = {
  fileId?: string | null;
  fileUniqueId?: string | null;
  fileSize?: bigint | null;
  thumbnail?: PhotoSize;
  fileName?: string | null;
  mimeType?: string | null;
};

export type EncryptedCredentials = {
  data?: string | null;
  hash?: string | null;
  secret?: string | null;
};

export type EncryptedPassportElement = {
  type?: EncryptedPassportElementType;
  data?: string | null;
  phoneNumber?: string | null;
  email?: string | null;
  files?: Array<PassportFile> | null;
  frontSide?: PassportFile;
  reverseSide?: PassportFile;
  selfie?: PassportFile;
  translation?: Array<PassportFile> | null;
  hash?: string | null;
};

export enum EncryptedPassportElementType {
  _1 = 1,
  _2 = 2,
  _3 = 3,
  _4 = 4,
  _5 = 5,
  _6 = 6,
  _7 = 7,
  _8 = 8,
  _9 = 9,
  _10 = 10,
  _11 = 11,
  _12 = 12,
  _13 = 13,
}

export type File = {
  fileId?: string | null;
  fileUniqueId?: string | null;
  fileSize?: bigint | null;
  filePath?: string | null;
};

export type FilterAgentDto = {
  page?: number;
  pageCount?: number;
  allEntitiesCount?: number;
  startPage?: number;
  endPage?: number;
  takeEntity?: number;
  skipEntity?: number;
  howManyShowPageAfterAndBefore?: number;
  showPageCountId?: number;
  entities?: Array<AgentDto> | null;
  adminId?: bigint | null;
  persianBrandName?: string | null;
  adminAgentName?: string | null;
  ancestor?: number;
};

export type FilterAgentDtoApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: FilterAgentDto;
};

export type FilterAppleId = {
  page?: number;
  pageCount?: number;
  allEntitiesCount?: number;
  startPage?: number;
  endPage?: number;
  takeEntity?: number;
  skipEntity?: number;
  howManyShowPageAfterAndBefore?: number;
  showPageCountId?: number;
  entities?: Array<AppleIdDto> | null;
  email?: string | null;
  userId?: bigint | null;
  status?: AppleIdStatus;
  type?: bigint | null;
};

export type FilterInputUserReportDto = {
  page?: number;
  pageCount?: number;
  allEntitiesCount?: number;
  startPage?: number;
  endPage?: number;
  takeEntity?: number;
  skipEntity?: number;
  howManyShowPageAfterAndBefore?: number;
  showPageCountId?: number;
  entities?: Array<InputUserReportDto> | null;
  startDate?: Date | null;
  endDate?: Date | null;
  agentId?: bigint;
  userId?: bigint;
};

export type FilterInputUserReportDtoApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: FilterInputUserReportDto;
};

export type FilterOrderDto = {
  page?: number;
  pageCount?: number;
  allEntitiesCount?: number;
  startPage?: number;
  endPage?: number;
  takeEntity?: number;
  skipEntity?: number;
  howManyShowPageAfterAndBefore?: number;
  showPageCountId?: number;
  entities?: Array<OrderDto> | null;
  isPaid?: PaidStatus;
  userId?: bigint;
};

export type FilterOrderDtoApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: FilterOrderDto;
};

export type FilterProductDto = {
  page?: number;
  pageCount?: number;
  allEntitiesCount?: number;
  startPage?: number;
  endPage?: number;
  takeEntity?: number;
  skipEntity?: number;
  howManyShowPageAfterAndBefore?: number;
  showPageCountId?: number;
  entities?: Array<ProductDto> | null;
  categoryId?: bigint;
  productName?: string | null;
};

export type FilterProductDtoApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: FilterProductDto;
};

export type FilterProfitReportDto = {
  page?: number;
  pageCount?: number;
  allEntitiesCount?: number;
  startPage?: number;
  endPage?: number;
  takeEntity?: number;
  skipEntity?: number;
  howManyShowPageAfterAndBefore?: number;
  showPageCountId?: number;
  entities?: Array<AgentIncomeDto> | null;
  startDate?: Date | null;
  endDate?: Date | null;
  agentId?: bigint;
  userId?: bigint;
};

export type FilterProfitReportDtoApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: FilterProfitReportDto;
};

export type FilterRegistryDto = {
  page?: number;
  pageCount?: number;
  allEntitiesCount?: number;
  startPage?: number;
  endPage?: number;
  takeEntity?: number;
  skipEntity?: number;
  howManyShowPageAfterAndBefore?: number;
  showPageCountId?: number;
  entities?: Array<RegistryDto> | null;
  imei?: string | null;
  status?: RegistryStatus;
};

export type FilterRegistryDtoApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: FilterRegistryDto;
};

export type FilterServerDto = {
  page?: number;
  pageCount?: number;
  allEntitiesCount?: number;
  startPage?: number;
  endPage?: number;
  takeEntity?: number;
  skipEntity?: number;
  howManyShowPageAfterAndBefore?: number;
  showPageCountId?: number;
  entities?: Array<ServerDto> | null;
  serverAddress?: string | null;
  serverName?: string | null;
};

export type FilterServerDtoApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: FilterServerDto;
};

export type FilterTransactionDto = {
  page?: number;
  pageCount?: number;
  allEntitiesCount?: number;
  startPage?: number;
  endPage?: number;
  takeEntity?: number;
  skipEntity?: number;
  howManyShowPageAfterAndBefore?: number;
  showPageCountId?: number;
  entities?: Array<TransactionDto> | null;
  type?: TransactionType;
  status?: TransactionStatus;
  details?: bigint | null;
  startDate?: Date | null;
  endDate?: Date | null;
  userId?: bigint | null;
};

export type FilterTransactionDtoApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: FilterTransactionDto;
};

export type FilterUsersDto = {
  page?: number;
  pageCount?: number;
  allEntitiesCount?: number;
  startPage?: number;
  endPage?: number;
  takeEntity?: number;
  skipEntity?: number;
  howManyShowPageAfterAndBefore?: number;
  showPageCountId?: number;
  entities?: Array<UserDto> | null;
  firstName?: string | null;
  lastName?: string | null;
  mobile?: string | null;
  agentId?: bigint;
  username?: string | null;
  isAgent?: number;
};

export type FilterUsersDtoApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: FilterUsersDto;
};

export type FilterVpnDto = {
  page?: number;
  pageCount?: number;
  allEntitiesCount?: number;
  startPage?: number;
  endPage?: number;
  takeEntity?: number;
  skipEntity?: number;
  howManyShowPageAfterAndBefore?: number;
  showPageCountId?: number;
  entities?: Array<VpnDto> | null;
};

export type FilterVpnDtoApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: FilterVpnDto;
};

export type ForgetUserPasswordDto = {
  mobile: string;
};

export type ForumTopicClosed = {
  [key: string]: never;
};

export type ForumTopicCreated = {
  name?: string | null;
  iconColor?: number;
  iconCustomEmojiId?: string | null;
};

export type ForumTopicEdited = {
  name?: string | null;
  iconCustomEmojiId?: string | null;
};

export type ForumTopicReopened = {
  [key: string]: never;
};

export type Game = {
  title?: string | null;
  description?: string | null;
  photo?: Array<PhotoSize> | null;
  text?: string | null;
  textEntities?: Array<MessageEntity> | null;
  animation?: Animation;
};

export type GeneralForumTopicHidden = {
  [key: string]: never;
};

export type GeneralForumTopicUnhidden = {
  [key: string]: never;
};

export type GetAppleIdTypeDto = {
  id?: bigint;
  title?: string | null;
  price?: bigint;
};

export type GetClientDto = {
  orderDetailsId?: bigint;
  serverId?: bigint;
};

export type GetMarzbanServerOptionDto = {
  id?: bigint;
  serverName?: string | null;
  userPrice?: bigint;
};

export type GetMarzbanVpnDto = {
  id?: bigint;
  name?: string | null;
  gbMax?: bigint;
  gbMin?: bigint;
  gbPrice?: bigint;
  dayMax?: bigint;
  dayMin?: bigint;
  dayPrice?: bigint;
  marzbanServerId?: bigint;
  vmess?: Array<string> | null;
  vless?: Array<string> | null;
  shadowsocks?: Array<string> | null;
  trojan?: Array<string> | null;
  test_Active?: boolean;
  test_Days?: bigint;
  test_TotalGb?: bigint;
  agentsIncomesDetailByPrice?: AgentsIncomesDetailByPriceDto;
};

export type HierarchyId = {
  [key: string]: never;
};

export type InboundDto = {
  id?: bigint;
  up?: bigint;
  down?: bigint;
  total?: bigint;
  listen?: string | null;
  remark?: string | null;
  enable?: boolean;
  port?: bigint;
  expiryTime?: bigint;
  protocol?: string | null;
  streamSettings?: string | null;
  sniffing?: string | null;
  settings?: string | null;
};

export type InboundDtoApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: InboundDto;
};

export type InformationPaymentDto = {
  cardNumber?: string | null;
  maximumAmount?: number;
  minimalAmount?: number;
  cardHolderName?: string | null;
};

export type InformationPaymentDtoApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: InformationPaymentDto;
};

export type InlineKeyboardButton = {
  text?: string | null;
  url?: string | null;
  callbackData?: string | null;
  webApp?: WebAppInfo;
  loginUrl?: LoginUrl;
  switchInlineQuery?: string | null;
  switchInlineQueryCurrentChat?: string | null;
  switchInlineQueryChosenChat?: SwitchInlineQueryChosenChat;
  callbackGame?: CallbackGame;
  pay?: boolean | null;
};

export type InlineKeyboardMarkup = {
  readonly inlineKeyboard?: Array<Array<InlineKeyboardButton>> | null;
};

export type InlineQuery = {
  id?: string | null;
  from?: User;
  query?: string | null;
  offset?: string | null;
  chatType?: ChatType;
  location?: Location;
};

export type InputUserReportDto = {
  count?: number;
  date?: Date;
};

export type Invoice = {
  title?: string | null;
  description?: string | null;
  startParameter?: string | null;
  currency?: string | null;
  totalAmount?: number;
};

export type Location = {
  longitude?: number;
  latitude?: number;
  horizontalAccuracy?: number | null;
  livePeriod?: number | null;
  heading?: number | null;
  proximityAlertRadius?: number | null;
};

export type LoginUrl = {
  url?: string | null;
  forwardText?: string | null;
  botUsername?: string | null;
  requestWriteAccess?: boolean | null;
};

export type LoginUserDto = {
  email?: string | null;
  chatId?: bigint | null;
  password: string;
};

export type LoginUserResponseDto = {
  token?: string | null;
  userName?: string | null;
};

export type LoginUserResponseDtoApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: LoginUserResponseDto;
};

export type MarzbanInboundsDto = {
  vmess?: Array<Vmess> | null;
  vless?: Array<Vless> | null;
  trojan?: Array<Trojan> | null;
  shadowsocks?: Array<Shadowsocks> | null;
};

export type MarzbanNodeDto = {
  name?: string | null;
  address?: string | null;
  port?: number;
  api_Port?: number;
  usage_Coefficient?: number;
  id?: bigint;
  xray_Version?: string | null;
  status?: NodeStatus;
  message?: string | null;
};

export type MarzbanNodeSettingDto = {
  min_Node_Version?: string | null;
  certificate?: string | null;
};

export type MarzbanUserDto = {
  id?: bigint;
  expire?: bigint | null;
  data_Limit?: bigint | null;
  data_Limit_Reset_Strategy?: string | null;
  note?: string | null;
  sub_Updated_At?: Date | null;
  sub_Last_User_Agent?: string | null;
  online_At?: Date | null;
  on_Hold_Expire_Duration?: bigint | null;
  onHoldTimeout?: string | null;
  username?: string | null;
  status?: string | null;
  used_Traffic?: bigint | null;
  lifetime_Used_Traffic?: bigint | null;
  created_At?: Date | null;
  links?: Array<string> | null;
  subscription_Url?: string | null;
  proxies?: unknown;
  inbounds?: unknown;
  isDelete?: boolean;
  marzbanVpnId?: bigint | null;
  marzbanServerId?: bigint;
  userId?: bigint;
  addedHolderInbound?: boolean;
  marzbanVpnName?: string | null;
  orderDeatilId?: bigint;
  chatId?: bigint;
  telegramUsername?: string | null;
  serviceTime?: number | null;
  volume?: number | null;
  orderId?: bigint;
};

export type MarzbanUserInformationDto = {
  links?: Array<string> | null;
  subscription_Url?: string | null;
  username?: string | null;
};

export type MarzbanVpnTemplateDto = {
  id?: bigint;
  title?: string | null;
  price?: bigint;
  days?: number;
  gb?: number;
  marzbanVpnId?: bigint;
};

export type MaskPosition = {
  point?: MaskPositionPoint;
  xShift?: number;
  yShift?: number;
  scale?: number;
};

export enum MaskPositionPoint {
  _1 = 1,
  _2 = 2,
  _3 = 3,
  _4 = 4,
}

export type Message = {
  messageId?: number;
  messageThreadId?: number | null;
  from?: User;
  senderChat?: Chat;
  date?: Date;
  chat?: Chat;
  forwardFrom?: User;
  isTopicMessage?: boolean | null;
  forwardFromChat?: Chat;
  forwardFromMessageId?: number | null;
  forwardSignature?: string | null;
  forwardSenderName?: string | null;
  forwardDate?: Date | null;
  isAutomaticForward?: boolean | null;
  replyToMessage?: Message;
  viaBot?: User;
  editDate?: Date | null;
  hasProtectedContent?: boolean | null;
  mediaGroupId?: string | null;
  authorSignature?: string | null;
  text?: string | null;
  entities?: Array<MessageEntity> | null;
  readonly entityValues?: Array<string> | null;
  animation?: Animation;
  audio?: Audio;
  document?: Document;
  photo?: Array<PhotoSize> | null;
  sticker?: Sticker;
  video?: Video;
  videoNote?: VideoNote;
  voice?: Voice;
  caption?: string | null;
  captionEntities?: Array<MessageEntity> | null;
  readonly captionEntityValues?: Array<string> | null;
  hasMediaSpoiler?: boolean | null;
  contact?: Contact;
  dice?: Dice;
  game?: Game;
  poll?: Poll;
  venue?: Venue;
  location?: Location;
  newChatMembers?: Array<User> | null;
  leftChatMember?: User;
  newChatTitle?: string | null;
  newChatPhoto?: Array<PhotoSize> | null;
  deleteChatPhoto?: boolean | null;
  groupChatCreated?: boolean | null;
  supergroupChatCreated?: boolean | null;
  channelChatCreated?: boolean | null;
  messageAutoDeleteTimerChanged?: MessageAutoDeleteTimerChanged;
  migrateToChatId?: bigint | null;
  migrateFromChatId?: bigint | null;
  pinnedMessage?: Message;
  invoice?: Invoice;
  successfulPayment?: SuccessfulPayment;
  userShared?: UserShared;
  chatShared?: ChatShared;
  connectedWebsite?: string | null;
  writeAccessAllowed?: WriteAccessAllowed;
  passportData?: PassportData;
  proximityAlertTriggered?: ProximityAlertTriggered;
  forumTopicCreated?: ForumTopicCreated;
  forumTopicEdited?: ForumTopicEdited;
  forumTopicClosed?: ForumTopicClosed;
  forumTopicReopened?: ForumTopicReopened;
  generalForumTopicHidden?: GeneralForumTopicHidden;
  generalForumTopicUnhidden?: GeneralForumTopicUnhidden;
  videoChatScheduled?: VideoChatScheduled;
  videoChatStarted?: VideoChatStarted;
  videoChatEnded?: VideoChatEnded;
  videoChatParticipantsInvited?: VideoChatParticipantsInvited;
  webAppData?: WebAppData;
  replyMarkup?: InlineKeyboardMarkup;
  type?: MessageType;
};

export type MessageAutoDeleteTimerChanged = {
  messageAutoDeleteTime?: number;
};

export type MessageEntity = {
  type?: MessageEntityType;
  offset?: number;
  length?: number;
  url?: string | null;
  user?: User;
  language?: string | null;
  customEmojiId?: string | null;
};

export enum MessageEntityType {
  _1 = 1,
  _2 = 2,
  _3 = 3,
  _4 = 4,
  _5 = 5,
  _6 = 6,
  _7 = 7,
  _8 = 8,
  _9 = 9,
  _10 = 10,
  _11 = 11,
  _12 = 12,
  _13 = 13,
  _14 = 14,
  _15 = 15,
  _16 = 16,
  _17 = 17,
}

export enum MessageType {
  _0 = 0,
  _1 = 1,
  _2 = 2,
  _3 = 3,
  _4 = 4,
  _5 = 5,
  _6 = 6,
  _7 = 7,
  _8 = 8,
  _9 = 9,
  _10 = 10,
  _11 = 11,
  _12 = 12,
  _13 = 13,
  _14 = 14,
  _15 = 15,
  _16 = 16,
  _17 = 17,
  _18 = 18,
  _19 = 19,
  _20 = 20,
  _21 = 21,
  _22 = 22,
  _23 = 23,
  _24 = 24,
  _25 = 25,
  _26 = 26,
  _27 = 27,
  _28 = 28,
  _29 = 29,
  _30 = 30,
  _31 = 31,
  _32 = 32,
  _33 = 33,
  _34 = 34,
  _35 = 35,
  _36 = 36,
  _37 = 37,
  _38 = 38,
  _39 = 39,
  _40 = 40,
  _41 = 41,
  _42 = 42,
  _43 = 43,
  _44 = 44,
  _45 = 45,
}

export enum NodeStatus {
  _0 = 0,
  _1 = 1,
  _2 = 2,
  _3 = 3,
}

export type NotificationDto = {
  expire?: Date;
  notificationType?: NotificationType;
  message?: string | null;
  botId?: bigint | null;
  chatId?: bigint | null;
  id?: bigint;
  fileAddress?: string | null;
  buttons?: Array<ButtonJsonDto> | null;
  fileCaption?: string | null;
  forward?: boolean;
  forwardChatId?: bigint | null;
  messageId?: number | null;
};

export enum NotificationType {
  _0 = 0,
  _1 = 1,
  _2 = 2,
  _3 = 3,
  _4 = 4,
  _5 = 5,
  _6 = 6,
  _7 = 7,
  _8 = 8,
  _9 = 9,
  _10 = 10,
  _11 = 11,
}

export type Nullable = {
  [key: string]: never;
};

export enum OrderDeatilType {
  _1 = 1,
  _2 = 2,
}

export type OrderDetailDto = {
  id?: bigint;
  count?: number;
  productPrice?: bigint;
  productName?: string | null;
  product?: ProductDto;
  clients?: Array<ClientInOrder> | null;
  marzbanUsers?: Array<MarzbanUserDto> | null;
  orderDeatilType?: OrderDeatilType;
};

export type OrderDto = {
  userId?: bigint;
  userName?: string | null;
  mobile?: string | null;
  paymentDate?: Date | null;
  isPaid?: boolean;
  tracingCode?: bigint;
  description?: string | null;
  orderDetail?: Array<OrderDetailDto> | null;
};

export type OrderInfo = {
  name?: string | null;
  phoneNumber?: string | null;
  email?: string | null;
  shippingAddress?: ShippingAddress;
};

export enum PaidStatus {
  _0 = 0,
  _1 = 1,
  _2 = 2,
}

export type PassportData = {
  data?: Array<EncryptedPassportElement> | null;
  credentials?: EncryptedCredentials;
};

export type PassportFile = {
  fileId?: string | null;
  fileUniqueId?: string | null;
  fileSize?: bigint | null;
  fileDate?: Date;
};

export type Permission = {
  permissionId?: bigint;
  permissionName?: string | null;
  title?: string | null;
};

export type PermissionAssignmentDto = {
  permissionId?: bigint;
  isAssigned?: boolean;
};

export type PermissionDto = {
  permissionId?: bigint;
  permissionName?: string | null;
  isAssigned?: boolean;
  title?: string | null;
};

export type PermissionDtoListApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: Array<PermissionDto> | null;
};

export type PhotoSize = {
  fileId?: string | null;
  fileUniqueId?: string | null;
  fileSize?: bigint | null;
  width?: number;
  height?: number;
};

export type Poll = {
  id?: string | null;
  question?: string | null;
  options?: Array<PollOption> | null;
  totalVoterCount?: number;
  isClosed?: boolean;
  isAnonymous?: boolean;
  type?: string | null;
  allowsMultipleAnswers?: boolean;
  correctOptionId?: number | null;
  explanation?: string | null;
  explanationEntities?: Array<MessageEntity> | null;
  openPeriod?: number | null;
  closeDate?: Date | null;
};

export type PollAnswer = {
  pollId?: string | null;
  user?: User;
  optionIds?: Array<number> | null;
};

export type PollOption = {
  text?: string | null;
  voterCount?: number;
};

export type PreCheckoutQuery = {
  id?: string | null;
  from?: User;
  currency?: string | null;
  totalAmount?: number;
  invoicePayload?: string | null;
  shippingOptionId?: string | null;
  orderInfo?: OrderInfo;
};

export type ProblemDetails = {
  type?: string | null;
  title?: string | null;
  status?: number | null;
  detail?: string | null;
  instance?: string | null;
  [key: string]:
    | unknown
    | (string | null)
    | (string | null)
    | (number | null)
    | (string | null)
    | (string | null)
    | undefined;
};

export type Product = {
  id?: bigint;
  createDate?: Date;
  modifiedDate?: Date;
  createBy?: bigint;
  modifyBy?: bigint;
  isDelete?: boolean;
  productName: string;
  price: bigint;
  categoryId?: bigint;
  description?: string | null;
  productImage?: string | null;
  vpnId?: bigint;
  appleIdTypes?: Array<AppleIdType> | null;
  category?: Category;
};

export type ProductDto = {
  id?: bigint;
  productName: string;
  price: bigint;
  categoryId?: bigint;
  description?: string | null;
  productImage?: string | null;
  categoryType?: CategoryType;
};

export enum ProductType {
  _2 = 2,
}

export enum Protocols {
  _0 = 0,
  _1 = 1,
  _2 = 2,
  _3 = 3,
}

export type ProximityAlertTriggered = {
  traveler?: User;
  watcher?: User;
  distance?: number;
};

export type RegisterUserDto = {
  email: string;
  firstName: string;
  lastName: string;
  password?: string | null;
  confirmPassword?: string | null;
  agentCode?: bigint | null;
  description?: string | null;
};

export type RegistryAmountModelDto = {
  id?: bigint;
  model?: string | null;
  price?: bigint | null;
};

export type RegistryDto = {
  id?: bigint;
  imeI_1?: string | null;
  imeI_2?: string | null;
  summery?: string | null;
  forWho?: string | null;
  status?: RegistryStatus;
  createDate?: Date;
  modifiedDate?: Date;
  createBy?: bigint | null;
  phone?: string | null;
  model?: string | null;
  price?: bigint | null;
};

export enum RegistryStatus {
  _0 = 0,
  _1 = 1,
  _2 = 2,
  _3 = 3,
}

export type RoleAssignmentDto = {
  roleId?: bigint;
  isAssigned?: boolean;
};

export type RoleDto = {
  roleId?: bigint;
  roleName?: string | null;
  isAssigned?: boolean;
};

export type RoleDtoListApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: Array<RoleDto> | null;
};

export type RolePermissionUpdateDto = {
  roleId?: bigint;
  permissions?: Array<PermissionAssignmentDto> | null;
};

export type SanaeiInboundDto = {
  id?: bigint;
  up?: bigint;
  down?: bigint;
  total?: bigint;
  remark?: string | null;
  enable?: boolean;
  expiryTime?: bigint;
  clientStats?: Array<ClientDto> | null;
};

export type SanaeiInboundDtoListApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: Array<SanaeiInboundDto> | null;
};

export type ServerDto = {
  id?: bigint;
  serverName?: string | null;
  serverAddress?: string | null;
  userName?: string | null;
  port?: string | null;
  password?: string | null;
  countryId?: bigint;
  subPath?: string | null;
  subDomain?: string | null;
  subPort?: string | null;
  serverStatus?: ServerStatus;
};

export type ServerDtoListApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: Array<ServerDto> | null;
};

export enum ServerStatus {
  _1 = 1,
  _2 = 2,
}

export type Shadowsocks = {
  tag?: string | null;
  protocol?: Protocols;
  network?: string | null;
  tls?: string | null;
  port?: string | null;
};

export type ShippingAddress = {
  countryCode?: string | null;
  state?: string | null;
  city?: string | null;
  streetLine1?: string | null;
  streetLine2?: string | null;
  postCode?: string | null;
};

export type ShippingQuery = {
  id?: string | null;
  from?: User;
  invoicePayload?: string | null;
  shippingAddress?: ShippingAddress;
};

export type Sticker = {
  fileId?: string | null;
  fileUniqueId?: string | null;
  fileSize?: bigint | null;
  type?: StickerType;
  width?: number;
  height?: number;
  isAnimated?: boolean;
  isVideo?: boolean;
  thumbnail?: PhotoSize;
  emoji?: string | null;
  setName?: string | null;
  premiumAnimation?: File;
  maskPosition?: MaskPosition;
  customEmojiId?: string | null;
  needsRepainting?: boolean | null;
};

export enum StickerType {
  _1 = 1,
  _2 = 2,
  _3 = 3,
}

export type SuccessfulPayment = {
  currency?: string | null;
  totalAmount?: number;
  invoicePayload?: string | null;
  shippingOptionId?: string | null;
  orderInfo?: OrderInfo;
  telegramPaymentChargeId?: string | null;
  providerPaymentChargeId?: string | null;
};

export type SwitchInlineQueryChosenChat = {
  query?: string | null;
  allowUserChats?: boolean | null;
  allowBotChats?: boolean | null;
  allowGroupChats?: boolean | null;
  allowChannelChats?: boolean | null;
};

export type TransactionDetailDto = {
  id?: bigint;
  maximumAmountForAgent?: bigint;
  minimalAmountForAgent?: bigint;
  maximumAmountForUser?: bigint;
  minimalAmountForUser?: bigint;
  cardNumber?: string | null;
  cardHolderName?: string | null;
  description?: string | null;
  agentId?: bigint;
  userPercent?: bigint;
  agentPercent?: bigint;
};

export type TransactionDetailDtoApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: TransactionDetailDto;
};

export type TransactionDto = {
  id?: bigint;
  title?: string | null;
  price?: bigint | null;
  description?: string | null;
  transactionType?: TransactionType;
  transactionStatus?: TransactionStatus;
  accountName?: string | null;
  transactionTime?: Date;
  cardNumber?: string | null;
  bankName?: string | null;
  avatarTransaction?: string | null;
  transactionCode?: bigint;
  createBy?: bigint;
  username?: string | null;
  chatId?: bigint;
  transactionDetailId?: bigint;
  balance?: bigint | null;
  firstName?: string | null;
  lastName?: string | null;
  userId?: bigint;
};

export type TransactionDtoApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: TransactionDto;
};

export enum TransactionStatus {
  _1 = 1,
  _2 = 2,
  _3 = 3,
}

export enum TransactionType {
  _0 = 0,
  _1 = 1,
  _2 = 2,
  _3 = 3,
}

export type Trojan = {
  tag?: string | null;
  protocol?: Protocols;
  network?: string | null;
  tls?: string | null;
  port?: string | null;
};

export type Update = {
  id?: number;
  message?: Message;
  editedMessage?: Message;
  channelPost?: Message;
  editedChannelPost?: Message;
  inlineQuery?: InlineQuery;
  chosenInlineResult?: ChosenInlineResult;
  callbackQuery?: CallbackQuery;
  shippingQuery?: ShippingQuery;
  preCheckoutQuery?: PreCheckoutQuery;
  poll?: Poll;
  pollAnswer?: PollAnswer;
  myChatMember?: ChatMemberUpdated;
  chatMember?: ChatMemberUpdated;
  chatJoinRequest?: ChatJoinRequest;
  type?: UpdateType;
};

export type UpdateAgentRequestDto = {
  agentRequestStatus?: string | null;
  id?: bigint;
};

export type UpdateInboundDto = {
  id?: bigint;
  listen?: string | null;
  remark?: string | null;
  enable?: boolean;
  port?: bigint;
  expiryTime?: bigint;
  protocol?: string | null;
};

export type UpdateTransactionStatusDto = {
  transactionStatus?: TransactionStatus;
  transactionId?: bigint;
};

export enum UpdateType {
  _0 = 0,
  _1 = 1,
  _2 = 2,
  _3 = 3,
  _4 = 4,
  _5 = 5,
  _6 = 6,
  _7 = 7,
  _8 = 8,
  _9 = 9,
  _10 = 10,
  _11 = 11,
  _12 = 12,
  _13 = 13,
  _14 = 14,
}

export type UpdateUserDto = {
  id?: bigint;
  isBlocked?: boolean;
  cardToCardPayment?: boolean;
  description?: string | null;
  specialPercent?: number;
};

export type User = {
  id?: bigint;
  isBot?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  username?: string | null;
  languageCode?: string | null;
  isPremium?: boolean | null;
  addedToAttachmentMenu?: boolean | null;
  canJoinGroups?: boolean | null;
  canReadAllGroupMessages?: boolean | null;
  supportsInlineQueries?: boolean | null;
};

export type UserDto = {
  id?: bigint;
  email?: string | null;
  mobile?: string | null;
  mobileActiveCode?: string | null;
  isMobileActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  avatar?: string | null;
  address?: string | null;
  agentId?: bigint;
  modifiedDate?: Date;
  balance?: bigint;
  chatId?: bigint | null;
  telegramUsername?: string | null;
  userStatus?: boolean;
  isBlocked?: boolean;
  cardToCardPayment?: boolean;
  createDate?: Date;
  isAgent?: boolean;
  agency?: AgentDto;
  description?: string | null;
};

export type UserDtoApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: UserDto;
};

export type UserDtoListApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: Array<UserDto> | null;
};

export type UserInformationDto = {
  firstName?: string | null;
  lastName?: string | null;
  telegramUsername?: string | null;
  isAgent?: boolean;
  chatId?: bigint;
  id?: bigint;
  agency?: AgentDto;
  botName?: string | null;
  botLink?: string | null;
  balance?: bigint;
  avatar?: string | null;
};

export type UserInformationDtoApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: UserInformationDto;
};

export type UserRolePermissionsDto = {
  roleId?: bigint;
  roleName?: string | null;
  permissions?: Array<Permission> | null;
};

export type UserRolePermissionsDtoListApiResult = {
  isSuccess?: boolean;
  statusCode?: ApiResultStatusCode;
  message?: string | null;
  jsonValidationMessage?: string | null;
  data?: Array<UserRolePermissionsDto> | null;
};

export type UserRoleUpdateDto = {
  userId?: bigint;
  roles?: Array<RoleAssignmentDto> | null;
};

export type UserShared = {
  requestId?: number;
  userId?: bigint;
};

export type Venue = {
  location?: Location;
  title?: string | null;
  address?: string | null;
  foursquareId?: string | null;
  foursquareType?: string | null;
  googlePlaceId?: string | null;
  googlePlaceType?: string | null;
};

export type Video = {
  fileId?: string | null;
  fileUniqueId?: string | null;
  fileSize?: bigint | null;
  width?: number;
  height?: number;
  duration?: number;
  thumbnail?: PhotoSize;
  fileName?: string | null;
  mimeType?: string | null;
};

export type VideoChatEnded = {
  duration?: number;
};

export type VideoChatParticipantsInvited = {
  users?: Array<User> | null;
};

export type VideoChatScheduled = {
  startDate?: Date;
};

export type VideoChatStarted = {
  [key: string]: never;
};

export type VideoNote = {
  fileId?: string | null;
  fileUniqueId?: string | null;
  fileSize?: bigint | null;
  length?: number;
  duration?: number;
  thumbnail?: PhotoSize;
};

export type Vless = {
  tag?: string | null;
  protocol?: Protocols;
  network?: string | null;
  tls?: string | null;
  port?: string | null;
};

export type Vmess = {
  tag?: string | null;
  protocol?: Protocols;
  network?: string | null;
  tls?: string | null;
  port?: string | null;
};

export type Voice = {
  fileId?: string | null;
  fileUniqueId?: string | null;
  fileSize?: bigint | null;
  duration?: number;
  mimeType?: string | null;
};

export type VpnDto = {
  id?: bigint;
  productName?: string | null;
  productImage?: string | null;
  description?: string | null;
  price?: bigint;
  days?: bigint;
  serverId?: bigint | null;
  numberUser?: bigint;
};

export type WebAppData = {
  data?: string | null;
  buttonText?: string | null;
};

export type WebAppInfo = {
  url?: string | null;
};

export type WriteAccessAllowed = {
  webAppName?: string | null;
};

export type GetApiV1AgentAgentsReachedNegativeLimitData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/Agent/AgentsReachedNegativeLimit";
};

export type GetApiV1AgentAgentsReachedNegativeLimitResponses = {
  /**
   * Success
   */
  200: AgentDtoListApiResult;
};

export type GetApiV1AgentAgentsReachedNegativeLimitResponse =
  GetApiV1AgentAgentsReachedNegativeLimitResponses[keyof GetApiV1AgentAgentsReachedNegativeLimitResponses];

export type GetApiV1AgentAgentsReachedNegativeNotLimitData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/Agent/AgentsReachedNegativeNotLimit";
};

export type GetApiV1AgentAgentsReachedNegativeNotLimitResponses = {
  /**
   * Success
   */
  200: AgentDtoListApiResult;
};

export type GetApiV1AgentAgentsReachedNegativeNotLimitResponse =
  GetApiV1AgentAgentsReachedNegativeNotLimitResponses[keyof GetApiV1AgentAgentsReachedNegativeNotLimitResponses];

export type GetApiV1AgentAgencyInformationData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/Agent/AgencyInformation";
};

export type GetApiV1AgentAgencyInformationErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1AgentAgencyInformationError =
  GetApiV1AgentAgencyInformationErrors[keyof GetApiV1AgentAgencyInformationErrors];

export type GetApiV1AgentAgencyInformationResponses = {
  /**
   * Success
   */
  200: AgencyInformationDtoApiResult;
};

export type GetApiV1AgentAgencyInformationResponse =
  GetApiV1AgentAgencyInformationResponses[keyof GetApiV1AgentAgencyInformationResponses];

export type GetApiV1AgentGetAgentTreeData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/Agent/GetAgentTree";
};

export type GetApiV1AgentGetAgentTreeErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1AgentGetAgentTreeError =
  GetApiV1AgentGetAgentTreeErrors[keyof GetApiV1AgentGetAgentTreeErrors];

export type GetApiV1AgentGetAgentTreeResponses = {
  /**
   * Success
   */
  200: AgentTreeDtoApiResult;
  /**
   * No Content
   */
  204: ApiResult;
};

export type GetApiV1AgentGetAgentTreeResponse =
  GetApiV1AgentGetAgentTreeResponses[keyof GetApiV1AgentGetAgentTreeResponses];

export type GetApiV1AgentGetAdminAgentInformationData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/Agent/GetAdminAgentInformation";
};

export type GetApiV1AgentGetAdminAgentInformationErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1AgentGetAdminAgentInformationError =
  GetApiV1AgentGetAdminAgentInformationErrors[keyof GetApiV1AgentGetAdminAgentInformationErrors];

export type GetApiV1AgentGetAdminAgentInformationResponses = {
  /**
   * Success
   */
  200: AgentDtoApiResult;
  /**
   * No Content
   */
  204: ApiResult;
};

export type GetApiV1AgentGetAdminAgentInformationResponse =
  GetApiV1AgentGetAdminAgentInformationResponses[keyof GetApiV1AgentGetAdminAgentInformationResponses];

export type GetApiV1AgentGetAgentByCodeByCodeData = {
  body?: never;
  path: {
    code: bigint;
  };
  query?: never;
  url: "/api/v1/Agent/GetAgentByCode/{code}";
};

export type GetApiV1AgentGetAgentByCodeByCodeErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1AgentGetAgentByCodeByCodeError =
  GetApiV1AgentGetAgentByCodeByCodeErrors[keyof GetApiV1AgentGetAgentByCodeByCodeErrors];

export type GetApiV1AgentGetAgentByCodeByCodeResponses = {
  /**
   * Success
   */
  200: AgentDtoApiResult;
  /**
   * No Content
   */
  204: ApiResult;
};

export type GetApiV1AgentGetAgentByCodeByCodeResponse =
  GetApiV1AgentGetAgentByCodeByCodeResponses[keyof GetApiV1AgentGetAgentByCodeByCodeResponses];

export type GetApiV1AgentGetUserAgentData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/Agent/GetUserAgent";
};

export type GetApiV1AgentGetUserAgentErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1AgentGetUserAgentError =
  GetApiV1AgentGetUserAgentErrors[keyof GetApiV1AgentGetUserAgentErrors];

export type GetApiV1AgentGetUserAgentResponses = {
  /**
   * Success
   */
  200: AgentDtoApiResult;
  /**
   * No Content
   */
  204: ApiResult;
};

export type GetApiV1AgentGetUserAgentResponse =
  GetApiV1AgentGetUserAgentResponses[keyof GetApiV1AgentGetUserAgentResponses];

export type GetApiV1AgentGetAgentByIdData = {
  body?: never;
  path?: never;
  query?: {
    id?: bigint;
  };
  url: "/api/v1/Agent/GetAgentById";
};

export type GetApiV1AgentGetAgentByIdErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1AgentGetAgentByIdError =
  GetApiV1AgentGetAgentByIdErrors[keyof GetApiV1AgentGetAgentByIdErrors];

export type GetApiV1AgentGetAgentByIdResponses = {
  /**
   * Success
   */
  200: AgentDtoApiResult;
  /**
   * No Content
   */
  204: ApiResult;
};

export type GetApiV1AgentGetAgentByIdResponse =
  GetApiV1AgentGetAgentByIdResponses[keyof GetApiV1AgentGetAgentByIdResponses];

export type GetApiV1AgentGetAgentsData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/Agent/GetAgents";
};

export type GetApiV1AgentGetAgentsErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1AgentGetAgentsError =
  GetApiV1AgentGetAgentsErrors[keyof GetApiV1AgentGetAgentsErrors];

export type GetApiV1AgentGetAgentsResponses = {
  /**
   * Success
   */
  200: AgentDtoListApiResult;
  /**
   * No Content
   */
  204: ApiResult;
};

export type GetApiV1AgentGetAgentsResponse =
  GetApiV1AgentGetAgentsResponses[keyof GetApiV1AgentGetAgentsResponses];

export type GetApiV1AgentGetAgentInformationData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/Agent/GetAgentInformation";
};

export type GetApiV1AgentGetAgentInformationErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1AgentGetAgentInformationError =
  GetApiV1AgentGetAgentInformationErrors[keyof GetApiV1AgentGetAgentInformationErrors];

export type GetApiV1AgentGetAgentInformationResponses = {
  /**
   * Success
   */
  200: AgentDto;
  /**
   * No Content
   */
  204: ApiResult;
};

export type GetApiV1AgentGetAgentInformationResponse =
  GetApiV1AgentGetAgentInformationResponses[keyof GetApiV1AgentGetAgentInformationResponses];

export type GetApiV1AgentGetAgentInformationPaymentData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/Agent/GetAgentInformationPayment";
};

export type GetApiV1AgentGetAgentInformationPaymentErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1AgentGetAgentInformationPaymentError =
  GetApiV1AgentGetAgentInformationPaymentErrors[keyof GetApiV1AgentGetAgentInformationPaymentErrors];

export type GetApiV1AgentGetAgentInformationPaymentResponses = {
  /**
   * Success
   */
  200: InformationPaymentDtoApiResult;
};

export type GetApiV1AgentGetAgentInformationPaymentResponse =
  GetApiV1AgentGetAgentInformationPaymentResponses[keyof GetApiV1AgentGetAgentInformationPaymentResponses];

export type GetApiV1AgentGetAgentRequestsData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/Agent/GetAgentRequests";
};

export type GetApiV1AgentGetAgentRequestsErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1AgentGetAgentRequestsError =
  GetApiV1AgentGetAgentRequestsErrors[keyof GetApiV1AgentGetAgentRequestsErrors];

export type GetApiV1AgentGetAgentRequestsResponses = {
  /**
   * Success
   */
  200: AgentRequestDtoListApiResult;
};

export type GetApiV1AgentGetAgentRequestsResponse =
  GetApiV1AgentGetAgentRequestsResponses[keyof GetApiV1AgentGetAgentRequestsResponses];

export type GetApiV1AgentFilterAgentsData = {
  body?: never;
  path?: never;
  query?: {
    AdminId?: bigint;
    PersianBrandName?: string;
    AdminAgentName?: string;
    Ancestor?: number;
    Page?: number;
    PageCount?: number;
    AllEntitiesCount?: number;
    StartPage?: number;
    EndPage?: number;
    TakeEntity?: number;
    SkipEntity?: number;
    HowManyShowPageAfterAndBefore?: number;
    ShowPageCountId?: number;
    Entities?: Array<AgentDto>;
  };
  url: "/api/v1/Agent/FilterAgents";
};

export type GetApiV1AgentFilterAgentsErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1AgentFilterAgentsError =
  GetApiV1AgentFilterAgentsErrors[keyof GetApiV1AgentFilterAgentsErrors];

export type GetApiV1AgentFilterAgentsResponses = {
  /**
   * Success
   */
  200: FilterAgentDtoApiResult;
  /**
   * No Content
   */
  204: ApiResult;
};

export type GetApiV1AgentFilterAgentsResponse =
  GetApiV1AgentFilterAgentsResponses[keyof GetApiV1AgentFilterAgentsResponses];

export type GetApiV1AgentGetAgentStatusData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/Agent/GetAgentStatus";
};

export type GetApiV1AgentGetAgentStatusErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1AgentGetAgentStatusError =
  GetApiV1AgentGetAgentStatusErrors[keyof GetApiV1AgentGetAgentStatusErrors];

export type GetApiV1AgentGetAgentStatusResponses = {
  /**
   * Success
   */
  200: Array<string>;
};

export type GetApiV1AgentGetAgentStatusResponse =
  GetApiV1AgentGetAgentStatusResponses[keyof GetApiV1AgentGetAgentStatusResponses];

export type PostApiV1AgentAddAgentData = {
  body?: AddAgentDto;
  path?: never;
  query?: never;
  url: "/api/v1/Agent/AddAgent";
};

export type PostApiV1AgentAddAgentErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1AgentAddAgentError =
  PostApiV1AgentAddAgentErrors[keyof PostApiV1AgentAddAgentErrors];

export type PostApiV1AgentAddAgentResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PostApiV1AgentAddAgentResponse =
  PostApiV1AgentAddAgentResponses[keyof PostApiV1AgentAddAgentResponses];

export type PostApiV1AgentAddRequestForAgentData = {
  body?: AddRequestAgentDto;
  path?: never;
  query?: never;
  url: "/api/v1/Agent/AddRequestForAgent";
};

export type PostApiV1AgentAddRequestForAgentErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1AgentAddRequestForAgentError =
  PostApiV1AgentAddRequestForAgentErrors[keyof PostApiV1AgentAddRequestForAgentErrors];

export type PostApiV1AgentAddRequestForAgentResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PostApiV1AgentAddRequestForAgentResponse =
  PostApiV1AgentAddRequestForAgentResponses[keyof PostApiV1AgentAddRequestForAgentResponses];

export type PutApiV1AgentChangeRequestStatusData = {
  body?: UpdateAgentRequestDto;
  path?: never;
  query?: never;
  url: "/api/v1/Agent/ChangeRequestStatus";
};

export type PutApiV1AgentChangeRequestStatusErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PutApiV1AgentChangeRequestStatusError =
  PutApiV1AgentChangeRequestStatusErrors[keyof PutApiV1AgentChangeRequestStatusErrors];

export type PutApiV1AgentChangeRequestStatusResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PutApiV1AgentChangeRequestStatusResponse =
  PutApiV1AgentChangeRequestStatusResponses[keyof PutApiV1AgentChangeRequestStatusResponses];

export type PutApiV1AgentUpdateData = {
  body?: AgencyInformationDto;
  path?: never;
  query?: never;
  url: "/api/v1/Agent/Update";
};

export type PutApiV1AgentUpdateErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PutApiV1AgentUpdateError =
  PutApiV1AgentUpdateErrors[keyof PutApiV1AgentUpdateErrors];

export type PutApiV1AgentUpdateResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PutApiV1AgentUpdateResponse =
  PutApiV1AgentUpdateResponses[keyof PutApiV1AgentUpdateResponses];

export type GetApiV1AgentProfitReportData = {
  body?: never;
  path?: never;
  query?: {
    StartDate?: Date;
    EndDate?: Date;
    AgentId?: bigint;
    UserId?: bigint;
    Page?: number;
    PageCount?: number;
    AllEntitiesCount?: number;
    StartPage?: number;
    EndPage?: number;
    TakeEntity?: number;
    SkipEntity?: number;
    HowManyShowPageAfterAndBefore?: number;
    ShowPageCountId?: number;
    Entities?: Array<AgentIncomeDto>;
  };
  url: "/api/v1/Agent/ProfitReport";
};

export type GetApiV1AgentProfitReportErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1AgentProfitReportError =
  GetApiV1AgentProfitReportErrors[keyof GetApiV1AgentProfitReportErrors];

export type GetApiV1AgentProfitReportResponses = {
  /**
   * Success
   */
  200: FilterProfitReportDtoApiResult;
};

export type GetApiV1AgentProfitReportResponse =
  GetApiV1AgentProfitReportResponses[keyof GetApiV1AgentProfitReportResponses];

export type GetApiV1AgentInputUserReportData = {
  body?: never;
  path?: never;
  query?: {
    StartDate?: Date;
    EndDate?: Date;
    AgentId?: bigint;
    UserId?: bigint;
    Page?: number;
    PageCount?: number;
    AllEntitiesCount?: number;
    StartPage?: number;
    EndPage?: number;
    TakeEntity?: number;
    SkipEntity?: number;
    HowManyShowPageAfterAndBefore?: number;
    ShowPageCountId?: number;
    Entities?: Array<InputUserReportDto>;
  };
  url: "/api/v1/Agent/InputUserReport";
};

export type GetApiV1AgentInputUserReportErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1AgentInputUserReportError =
  GetApiV1AgentInputUserReportErrors[keyof GetApiV1AgentInputUserReportErrors];

export type GetApiV1AgentInputUserReportResponses = {
  /**
   * Success
   */
  200: FilterInputUserReportDtoApiResult;
};

export type GetApiV1AgentInputUserReportResponse =
  GetApiV1AgentInputUserReportResponses[keyof GetApiV1AgentInputUserReportResponses];

export type GetApiV1AppleGetAppleIdTypeData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/Apple/GetAppleIdType";
};

export type GetApiV1AppleGetAppleIdTypeErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1AppleGetAppleIdTypeError =
  GetApiV1AppleGetAppleIdTypeErrors[keyof GetApiV1AppleGetAppleIdTypeErrors];

export type GetApiV1AppleGetAppleIdTypeResponses = {
  /**
   * Success
   */
  200: Array<GetAppleIdTypeDto>;
};

export type GetApiV1AppleGetAppleIdTypeResponse =
  GetApiV1AppleGetAppleIdTypeResponses[keyof GetApiV1AppleGetAppleIdTypeResponses];

export type GetApiV1AppleFilterAppleIdData = {
  body?: never;
  path?: never;
  query?: {
    Email?: string;
    UserId?: bigint;
    Status?: AppleIdStatus;
    Type?: bigint;
    Page?: number;
    PageCount?: number;
    AllEntitiesCount?: number;
    StartPage?: number;
    EndPage?: number;
    TakeEntity?: number;
    SkipEntity?: number;
    HowManyShowPageAfterAndBefore?: number;
    ShowPageCountId?: number;
    Entities?: Array<AppleIdDto>;
  };
  url: "/api/v1/Apple/FilterAppleId";
};

export type GetApiV1AppleFilterAppleIdErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1AppleFilterAppleIdError =
  GetApiV1AppleFilterAppleIdErrors[keyof GetApiV1AppleFilterAppleIdErrors];

export type GetApiV1AppleFilterAppleIdResponses = {
  /**
   * Success
   */
  200: FilterAppleId;
};

export type GetApiV1AppleFilterAppleIdResponse =
  GetApiV1AppleFilterAppleIdResponses[keyof GetApiV1AppleFilterAppleIdResponses];

export type PostApiV1AppleAddAppleIdData = {
  body?: AddAppleIdDto;
  path?: never;
  query?: never;
  url: "/api/v1/Apple/AddAppleId";
};

export type PostApiV1AppleAddAppleIdErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1AppleAddAppleIdError =
  PostApiV1AppleAddAppleIdErrors[keyof PostApiV1AppleAddAppleIdErrors];

export type PostApiV1AppleAddAppleIdResponses = {
  /**
   * Success
   */
  200: AppleId;
};

export type PostApiV1AppleAddAppleIdResponse =
  PostApiV1AppleAddAppleIdResponses[keyof PostApiV1AppleAddAppleIdResponses];

export type GetApiV1AppleGetAppleIdByIdByIdData = {
  body?: never;
  path: {
    id: bigint;
  };
  query?: never;
  url: "/api/v1/Apple/GetAppleIdById/{id}";
};

export type GetApiV1AppleGetAppleIdByIdByIdErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1AppleGetAppleIdByIdByIdError =
  GetApiV1AppleGetAppleIdByIdByIdErrors[keyof GetApiV1AppleGetAppleIdByIdByIdErrors];

export type GetApiV1AppleGetAppleIdByIdByIdResponses = {
  /**
   * Success
   */
  200: AppleIdDto;
};

export type GetApiV1AppleGetAppleIdByIdByIdResponse =
  GetApiV1AppleGetAppleIdByIdByIdResponses[keyof GetApiV1AppleGetAppleIdByIdByIdResponses];

export type PutApiV1AppleUpdateAppleIdData = {
  body?: AppleIdDto;
  path?: never;
  query?: never;
  url: "/api/v1/Apple/UpdateAppleId";
};

export type PutApiV1AppleUpdateAppleIdResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PutApiV1AppleUpdateAppleIdResponse =
  PutApiV1AppleUpdateAppleIdResponses[keyof PutApiV1AppleUpdateAppleIdResponses];

export type GetApiV1AuthorizationGetUserRolePermissionsData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/Authorization/GetUserRolePermissions";
};

export type GetApiV1AuthorizationGetUserRolePermissionsResponses = {
  /**
   * Success
   */
  200: UserRolePermissionsDtoListApiResult;
};

export type GetApiV1AuthorizationGetUserRolePermissionsResponse =
  GetApiV1AuthorizationGetUserRolePermissionsResponses[keyof GetApiV1AuthorizationGetUserRolePermissionsResponses];

export type PutApiV1AuthorizationUpdateUserRolesUserRolesData = {
  body?: UserRoleUpdateDto;
  path?: never;
  query?: never;
  url: "/api/v1/Authorization/UpdateUserRoles/user/roles";
};

export type PutApiV1AuthorizationUpdateUserRolesUserRolesResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PutApiV1AuthorizationUpdateUserRolesUserRolesResponse =
  PutApiV1AuthorizationUpdateUserRolesUserRolesResponses[keyof PutApiV1AuthorizationUpdateUserRolesUserRolesResponses];

export type PutApiV1AuthorizationUpdateRolePermissionsRolePermissionsData = {
  body?: RolePermissionUpdateDto;
  path?: never;
  query?: never;
  url: "/api/v1/Authorization/UpdateRolePermissions/role/permissions";
};

export type PutApiV1AuthorizationUpdateRolePermissionsRolePermissionsResponses =
  {
    /**
     * Success
     */
    200: ApiResult;
  };

export type PutApiV1AuthorizationUpdateRolePermissionsRolePermissionsResponse =
  PutApiV1AuthorizationUpdateRolePermissionsRolePermissionsResponses[keyof PutApiV1AuthorizationUpdateRolePermissionsRolePermissionsResponses];

export type GetApiV1AuthorizationGetRolesForUserUserByUserIdRolesData = {
  body?: never;
  path: {
    userId: bigint;
  };
  query?: never;
  url: "/api/v1/Authorization/GetRolesForUser/user/{userId}/roles";
};

export type GetApiV1AuthorizationGetRolesForUserUserByUserIdRolesResponses = {
  /**
   * Success
   */
  200: RoleDtoListApiResult;
};

export type GetApiV1AuthorizationGetRolesForUserUserByUserIdRolesResponse =
  GetApiV1AuthorizationGetRolesForUserUserByUserIdRolesResponses[keyof GetApiV1AuthorizationGetRolesForUserUserByUserIdRolesResponses];

export type GetApiV1AuthorizationGetPermissionsForRoleRoleByRoleIdPermissionsData =
  {
    body?: never;
    path: {
      roleId: bigint;
    };
    query?: never;
    url: "/api/v1/Authorization/GetPermissionsForRole/role/{roleId}/permissions";
  };

export type GetApiV1AuthorizationGetPermissionsForRoleRoleByRoleIdPermissionsResponses =
  {
    /**
     * Success
     */
    200: PermissionDtoListApiResult;
  };

export type GetApiV1AuthorizationGetPermissionsForRoleRoleByRoleIdPermissionsResponse =
  GetApiV1AuthorizationGetPermissionsForRoleRoleByRoleIdPermissionsResponses[keyof GetApiV1AuthorizationGetPermissionsForRoleRoleByRoleIdPermissionsResponses];

export type GetApiV1AuthorizationGetAllRolesRolesData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/Authorization/GetAllRoles/roles";
};

export type GetApiV1AuthorizationGetAllRolesRolesResponses = {
  /**
   * Success
   */
  200: RoleDtoListApiResult;
};

export type GetApiV1AuthorizationGetAllRolesRolesResponse =
  GetApiV1AuthorizationGetAllRolesRolesResponses[keyof GetApiV1AuthorizationGetAllRolesRolesResponses];

export type GetApiV1AuthorizationGetAllPermissionsPermissionsData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/Authorization/GetAllPermissions/permissions";
};

export type GetApiV1AuthorizationGetAllPermissionsPermissionsResponses = {
  /**
   * Success
   */
  200: PermissionDtoListApiResult;
};

export type GetApiV1AuthorizationGetAllPermissionsPermissionsResponse =
  GetApiV1AuthorizationGetAllPermissionsPermissionsResponses[keyof GetApiV1AuthorizationGetAllPermissionsPermissionsResponses];

export type PostByTokenData = {
  body?: Update;
  path: {
    token: string;
  };
  query?: never;
  url: "/{token}";
};

export type PostByTokenResponses = {
  /**
   * Success
   */
  200: unknown;
};

export type PostApiV1CategoryAddCategoryData = {
  body?: AddCategoryDto;
  path?: never;
  query?: never;
  url: "/api/v1/Category/AddCategory";
};

export type PostApiV1CategoryAddCategoryErrors = {
  /**
   * Bad Request
   */
  400: AddCategoryDtoApiResult;
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1CategoryAddCategoryError =
  PostApiV1CategoryAddCategoryErrors[keyof PostApiV1CategoryAddCategoryErrors];

export type PostApiV1CategoryAddCategoryResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PostApiV1CategoryAddCategoryResponse =
  PostApiV1CategoryAddCategoryResponses[keyof PostApiV1CategoryAddCategoryResponses];

export type PostApiV1CategoryGetCategoriesData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/Category/GetCategories";
};

export type PostApiV1CategoryGetCategoriesErrors = {
  /**
   * Bad Request
   */
  400: ApiResult;
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1CategoryGetCategoriesError =
  PostApiV1CategoryGetCategoriesErrors[keyof PostApiV1CategoryGetCategoriesErrors];

export type PostApiV1CategoryGetCategoriesResponses = {
  /**
   * Success
   */
  200: CategoryDtoListApiResult;
};

export type PostApiV1CategoryGetCategoriesResponse =
  PostApiV1CategoryGetCategoriesResponses[keyof PostApiV1CategoryGetCategoriesResponses];

export type PostApiV1CategoryGetCategoryData = {
  body?: never;
  path?: never;
  query?: {
    categoryId?: bigint;
  };
  url: "/api/v1/Category/GetCategory";
};

export type PostApiV1CategoryGetCategoryErrors = {
  /**
   * Bad Request
   */
  400: ApiResult;
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1CategoryGetCategoryError =
  PostApiV1CategoryGetCategoryErrors[keyof PostApiV1CategoryGetCategoryErrors];

export type PostApiV1CategoryGetCategoryResponses = {
  /**
   * Success
   */
  200: CategoryDtoApiResult;
};

export type PostApiV1CategoryGetCategoryResponse =
  PostApiV1CategoryGetCategoryResponses[keyof PostApiV1CategoryGetCategoryResponses];

export type GetApiV1CountryGetCountrisData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/Country/GetCountris";
};

export type GetApiV1CountryGetCountrisErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1CountryGetCountrisError =
  GetApiV1CountryGetCountrisErrors[keyof GetApiV1CountryGetCountrisErrors];

export type GetApiV1CountryGetCountrisResponses = {
  /**
   * Success
   */
  200: CountryDtoListApiResult;
};

export type GetApiV1CountryGetCountrisResponse =
  GetApiV1CountryGetCountrisResponses[keyof GetApiV1CountryGetCountrisResponses];

export type PostApiV1CountryAddCountryData = {
  body?: AddCountryDto;
  path?: never;
  query?: never;
  url: "/api/v1/Country/AddCountry";
};

export type PostApiV1CountryAddCountryErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1CountryAddCountryError =
  PostApiV1CountryAddCountryErrors[keyof PostApiV1CountryAddCountryErrors];

export type PostApiV1CountryAddCountryResponses = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1CountryAddCountryResponse =
  PostApiV1CountryAddCountryResponses[keyof PostApiV1CountryAddCountryResponses];

export type GetApiV1DockerGetDockerData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/Docker/GetDocker";
};

export type GetApiV1DockerGetDockerResponses = {
  /**
   * Success
   */
  200: unknown;
};

export type PostApiV1MarzbanAddMarzbanServerData = {
  body?: AddMarzbanServerDto;
  path?: never;
  query?: never;
  url: "/api/v1/Marzban/AddMarzbanServer";
};

export type PostApiV1MarzbanAddMarzbanServerErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1MarzbanAddMarzbanServerError =
  PostApiV1MarzbanAddMarzbanServerErrors[keyof PostApiV1MarzbanAddMarzbanServerErrors];

export type PostApiV1MarzbanAddMarzbanServerResponses = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1MarzbanAddMarzbanServerResponse =
  PostApiV1MarzbanAddMarzbanServerResponses[keyof PostApiV1MarzbanAddMarzbanServerResponses];

export type GetApiV1MarzbanGetMarzbanServerData = {
  body?: never;
  path?: never;
  query?: {
    id?: bigint;
  };
  url: "/api/v1/Marzban/GetMarzbanServer";
};

export type GetApiV1MarzbanGetMarzbanServerErrors = {
  /**
   * Not Found
   */
  404: GetMarzbanServerOptionDto;
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1MarzbanGetMarzbanServerError =
  GetApiV1MarzbanGetMarzbanServerErrors[keyof GetApiV1MarzbanGetMarzbanServerErrors];

export type GetApiV1MarzbanGetMarzbanServerResponses = {
  /**
   * Success
   */
  200: GetMarzbanServerOptionDto;
  /**
   * No Content
   */
  204: GetMarzbanServerOptionDto;
};

export type GetApiV1MarzbanGetMarzbanServerResponse =
  GetApiV1MarzbanGetMarzbanServerResponses[keyof GetApiV1MarzbanGetMarzbanServerResponses];

export type GetApiV1MarzbanGetMarzbanServersData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/Marzban/GetMarzbanServers";
};

export type GetApiV1MarzbanGetMarzbanServersErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1MarzbanGetMarzbanServersError =
  GetApiV1MarzbanGetMarzbanServersErrors[keyof GetApiV1MarzbanGetMarzbanServersErrors];

export type GetApiV1MarzbanGetMarzbanServersResponses = {
  /**
   * Success
   */
  200: Array<GetMarzbanServerOptionDto>;
};

export type GetApiV1MarzbanGetMarzbanServersResponse =
  GetApiV1MarzbanGetMarzbanServersResponses[keyof GetApiV1MarzbanGetMarzbanServersResponses];

export type PostApiV1MarzbanReasetMarzbanServerCoreData = {
  body?: never;
  path?: never;
  query?: {
    serverId?: bigint;
  };
  url: "/api/v1/Marzban/ReasetMarzbanServerCore";
};

export type PostApiV1MarzbanReasetMarzbanServerCoreErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1MarzbanReasetMarzbanServerCoreError =
  PostApiV1MarzbanReasetMarzbanServerCoreErrors[keyof PostApiV1MarzbanReasetMarzbanServerCoreErrors];

export type PostApiV1MarzbanReasetMarzbanServerCoreResponses = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1MarzbanReasetMarzbanServerCoreResponse =
  PostApiV1MarzbanReasetMarzbanServerCoreResponses[keyof PostApiV1MarzbanReasetMarzbanServerCoreResponses];

export type GetApiV1MarzbanGetMarzbanServerCoreConfigData = {
  body?: never;
  path?: never;
  query?: {
    serverId?: bigint;
  };
  url: "/api/v1/Marzban/GetMarzbanServerCoreConfig";
};

export type GetApiV1MarzbanGetMarzbanServerCoreConfigErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1MarzbanGetMarzbanServerCoreConfigError =
  GetApiV1MarzbanGetMarzbanServerCoreConfigErrors[keyof GetApiV1MarzbanGetMarzbanServerCoreConfigErrors];

export type GetApiV1MarzbanGetMarzbanServerCoreConfigResponses = {
  /**
   * Success
   */
  200: string;
};

export type GetApiV1MarzbanGetMarzbanServerCoreConfigResponse =
  GetApiV1MarzbanGetMarzbanServerCoreConfigResponses[keyof GetApiV1MarzbanGetMarzbanServerCoreConfigResponses];

export type PutApiV1MarzbanUpdateMarzbanServerCoreConfigData = {
  body?: unknown;
  path?: never;
  query?: {
    serverId?: bigint;
  };
  url: "/api/v1/Marzban/UpdateMarzbanServerCoreConfig";
};

export type PutApiV1MarzbanUpdateMarzbanServerCoreConfigErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PutApiV1MarzbanUpdateMarzbanServerCoreConfigError =
  PutApiV1MarzbanUpdateMarzbanServerCoreConfigErrors[keyof PutApiV1MarzbanUpdateMarzbanServerCoreConfigErrors];

export type PutApiV1MarzbanUpdateMarzbanServerCoreConfigResponses = {
  /**
   * Success
   */
  200: string;
};

export type PutApiV1MarzbanUpdateMarzbanServerCoreConfigResponse =
  PutApiV1MarzbanUpdateMarzbanServerCoreConfigResponses[keyof PutApiV1MarzbanUpdateMarzbanServerCoreConfigResponses];

export type GetApiV1MarzbanGetMarzbanServerNodeSettingsData = {
  body?: never;
  path?: never;
  query?: {
    serverId?: bigint;
  };
  url: "/api/v1/Marzban/GetMarzbanServerNodeSettings";
};

export type GetApiV1MarzbanGetMarzbanServerNodeSettingsErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1MarzbanGetMarzbanServerNodeSettingsError =
  GetApiV1MarzbanGetMarzbanServerNodeSettingsErrors[keyof GetApiV1MarzbanGetMarzbanServerNodeSettingsErrors];

export type GetApiV1MarzbanGetMarzbanServerNodeSettingsResponses = {
  /**
   * Success
   */
  200: MarzbanNodeSettingDto;
};

export type GetApiV1MarzbanGetMarzbanServerNodeSettingsResponse =
  GetApiV1MarzbanGetMarzbanServerNodeSettingsResponses[keyof GetApiV1MarzbanGetMarzbanServerNodeSettingsResponses];

export type PostApiV1MarzbanGetMarzbanServerNodeSettingsData = {
  body?: AddMarzbanNodeDto;
  path?: never;
  query?: {
    serverId?: bigint;
  };
  url: "/api/v1/Marzban/GetMarzbanServerNodeSettings";
};

export type PostApiV1MarzbanGetMarzbanServerNodeSettingsErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1MarzbanGetMarzbanServerNodeSettingsError =
  PostApiV1MarzbanGetMarzbanServerNodeSettingsErrors[keyof PostApiV1MarzbanGetMarzbanServerNodeSettingsErrors];

export type PostApiV1MarzbanGetMarzbanServerNodeSettingsResponses = {
  /**
   * Success
   */
  200: MarzbanNodeDto;
};

export type PostApiV1MarzbanGetMarzbanServerNodeSettingsResponse =
  PostApiV1MarzbanGetMarzbanServerNodeSettingsResponses[keyof PostApiV1MarzbanGetMarzbanServerNodeSettingsResponses];

export type GetApiV1MarzbanGetMarzbanServerNodeByIdData = {
  body?: never;
  path?: never;
  query?: {
    serverId?: bigint;
    nodeId?: bigint;
  };
  url: "/api/v1/Marzban/GetMarzbanServerNodeById";
};

export type GetApiV1MarzbanGetMarzbanServerNodeByIdErrors = {
  /**
   * Not Found
   */
  404: Nullable;
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1MarzbanGetMarzbanServerNodeByIdError =
  GetApiV1MarzbanGetMarzbanServerNodeByIdErrors[keyof GetApiV1MarzbanGetMarzbanServerNodeByIdErrors];

export type GetApiV1MarzbanGetMarzbanServerNodeByIdResponses = {
  /**
   * Success
   */
  200: MarzbanNodeDto;
};

export type GetApiV1MarzbanGetMarzbanServerNodeByIdResponse =
  GetApiV1MarzbanGetMarzbanServerNodeByIdResponses[keyof GetApiV1MarzbanGetMarzbanServerNodeByIdResponses];

export type PutApiV1MarzbanUpdateMarzbanServerNodeData = {
  body?: AddMarzbanNodeDto;
  path?: never;
  query?: {
    serverId?: bigint;
    nodeId?: bigint;
  };
  url: "/api/v1/Marzban/UpdateMarzbanServerNode";
};

export type PutApiV1MarzbanUpdateMarzbanServerNodeErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PutApiV1MarzbanUpdateMarzbanServerNodeError =
  PutApiV1MarzbanUpdateMarzbanServerNodeErrors[keyof PutApiV1MarzbanUpdateMarzbanServerNodeErrors];

export type PutApiV1MarzbanUpdateMarzbanServerNodeResponses = {
  /**
   * Success
   */
  200: MarzbanNodeDto;
};

export type PutApiV1MarzbanUpdateMarzbanServerNodeResponse =
  PutApiV1MarzbanUpdateMarzbanServerNodeResponses[keyof PutApiV1MarzbanUpdateMarzbanServerNodeResponses];

export type DeleteApiV1MarzbanDeleteMarzbanServerNodeData = {
  body?: never;
  path?: never;
  query?: {
    serverId?: bigint;
    nodeId?: bigint;
  };
  url: "/api/v1/Marzban/DeleteMarzbanServerNode";
};

export type DeleteApiV1MarzbanDeleteMarzbanServerNodeErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type DeleteApiV1MarzbanDeleteMarzbanServerNodeError =
  DeleteApiV1MarzbanDeleteMarzbanServerNodeErrors[keyof DeleteApiV1MarzbanDeleteMarzbanServerNodeErrors];

export type DeleteApiV1MarzbanDeleteMarzbanServerNodeResponses = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type DeleteApiV1MarzbanDeleteMarzbanServerNodeResponse =
  DeleteApiV1MarzbanDeleteMarzbanServerNodeResponses[keyof DeleteApiV1MarzbanDeleteMarzbanServerNodeResponses];

export type GetApiV1MarzbanGetMarzbanServerNodesData = {
  body?: never;
  path?: never;
  query?: {
    serverId?: bigint;
  };
  url: "/api/v1/Marzban/GetMarzbanServerNodes";
};

export type GetApiV1MarzbanGetMarzbanServerNodesErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1MarzbanGetMarzbanServerNodesError =
  GetApiV1MarzbanGetMarzbanServerNodesErrors[keyof GetApiV1MarzbanGetMarzbanServerNodesErrors];

export type GetApiV1MarzbanGetMarzbanServerNodesResponses = {
  /**
   * Success
   */
  200: Array<MarzbanNodeDto>;
};

export type GetApiV1MarzbanGetMarzbanServerNodesResponse =
  GetApiV1MarzbanGetMarzbanServerNodesResponses[keyof GetApiV1MarzbanGetMarzbanServerNodesResponses];

export type GetApiV1MarzbanGetMarzbanInboudsData = {
  body?: never;
  path?: never;
  query?: {
    serverId?: bigint;
  };
  url: "/api/v1/Marzban/GetMarzbanInbouds";
};

export type GetApiV1MarzbanGetMarzbanInboudsErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1MarzbanGetMarzbanInboudsError =
  GetApiV1MarzbanGetMarzbanInboudsErrors[keyof GetApiV1MarzbanGetMarzbanInboudsErrors];

export type GetApiV1MarzbanGetMarzbanInboudsResponses = {
  /**
   * Success
   */
  200: Array<MarzbanInboundsDto>;
};

export type GetApiV1MarzbanGetMarzbanInboudsResponse =
  GetApiV1MarzbanGetMarzbanInboudsResponses[keyof GetApiV1MarzbanGetMarzbanInboudsResponses];

export type GetApiV1MarzbanPortocolsData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/Marzban/Portocols";
};

export type GetApiV1MarzbanPortocolsResponses = {
  /**
   * Success
   */
  200: Array<string>;
};

export type GetApiV1MarzbanPortocolsResponse =
  GetApiV1MarzbanPortocolsResponses[keyof GetApiV1MarzbanPortocolsResponses];

export type PostApiV1MarzbanAddMarzbanVpnData = {
  body?: AddMarzbanVpnDto;
  path?: never;
  query?: never;
  url: "/api/v1/Marzban/AddMarzbanVpn";
};

export type PostApiV1MarzbanAddMarzbanVpnErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1MarzbanAddMarzbanVpnError =
  PostApiV1MarzbanAddMarzbanVpnErrors[keyof PostApiV1MarzbanAddMarzbanVpnErrors];

export type PostApiV1MarzbanAddMarzbanVpnResponses = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1MarzbanAddMarzbanVpnResponse =
  PostApiV1MarzbanAddMarzbanVpnResponses[keyof PostApiV1MarzbanAddMarzbanVpnResponses];

export type GetApiV1MarzbanGetMarzbanVpnData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/Marzban/GetMarzbanVpn";
};

export type GetApiV1MarzbanGetMarzbanVpnResponses = {
  /**
   * Success
   */
  200: Array<GetMarzbanVpnDto>;
};

export type GetApiV1MarzbanGetMarzbanVpnResponse =
  GetApiV1MarzbanGetMarzbanVpnResponses[keyof GetApiV1MarzbanGetMarzbanVpnResponses];

export type PostApiV1MarzbanBuyMarzbanVpnData = {
  body?: BuyMarzbanVpnDto;
  path?: never;
  query?: never;
  url: "/api/v1/Marzban/BuyMarzbanVpn";
};

export type PostApiV1MarzbanBuyMarzbanVpnErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1MarzbanBuyMarzbanVpnError =
  PostApiV1MarzbanBuyMarzbanVpnErrors[keyof PostApiV1MarzbanBuyMarzbanVpnErrors];

export type PostApiV1MarzbanBuyMarzbanVpnResponses = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1MarzbanBuyMarzbanVpnResponse =
  PostApiV1MarzbanBuyMarzbanVpnResponses[keyof PostApiV1MarzbanBuyMarzbanVpnResponses];

export type PostApiV1MarzbanGetMarzbanUserData = {
  body?: never;
  path?: never;
  query?: {
    Username?: string;
  };
  url: "/api/v1/Marzban/GetMarzbanUser";
};

export type PostApiV1MarzbanGetMarzbanUserErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1MarzbanGetMarzbanUserError =
  PostApiV1MarzbanGetMarzbanUserErrors[keyof PostApiV1MarzbanGetMarzbanUserErrors];

export type PostApiV1MarzbanGetMarzbanUserResponses = {
  /**
   * Success
   */
  200: MarzbanUserInformationDto;
};

export type PostApiV1MarzbanGetMarzbanUserResponse =
  PostApiV1MarzbanGetMarzbanUserResponses[keyof PostApiV1MarzbanGetMarzbanUserResponses];

export type PostApiV1MarzbanAddMarzbanVpnTemplateData = {
  body?: AddMarzbanVpnTemplatesDto;
  path?: never;
  query?: never;
  url: "/api/v1/Marzban/AddMarzbanVpnTemplate";
};

export type PostApiV1MarzbanAddMarzbanVpnTemplateErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1MarzbanAddMarzbanVpnTemplateError =
  PostApiV1MarzbanAddMarzbanVpnTemplateErrors[keyof PostApiV1MarzbanAddMarzbanVpnTemplateErrors];

export type PostApiV1MarzbanAddMarzbanVpnTemplateResponses = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1MarzbanAddMarzbanVpnTemplateResponse =
  PostApiV1MarzbanAddMarzbanVpnTemplateResponses[keyof PostApiV1MarzbanAddMarzbanVpnTemplateResponses];

export type GetApiV1MarzbanGetMarzbanVpnTemplateByVpnIdData = {
  body?: never;
  path?: never;
  query?: {
    vpnId?: bigint;
  };
  url: "/api/v1/Marzban/GetMarzbanVpnTemplateByVpnId";
};

export type GetApiV1MarzbanGetMarzbanVpnTemplateByVpnIdErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1MarzbanGetMarzbanVpnTemplateByVpnIdError =
  GetApiV1MarzbanGetMarzbanVpnTemplateByVpnIdErrors[keyof GetApiV1MarzbanGetMarzbanVpnTemplateByVpnIdErrors];

export type GetApiV1MarzbanGetMarzbanVpnTemplateByVpnIdResponses = {
  /**
   * Success
   */
  200: Array<MarzbanVpnTemplateDto>;
};

export type GetApiV1MarzbanGetMarzbanVpnTemplateByVpnIdResponse =
  GetApiV1MarzbanGetMarzbanVpnTemplateByVpnIdResponses[keyof GetApiV1MarzbanGetMarzbanVpnTemplateByVpnIdResponses];

export type PostApiV1MenuAddMenusData = {
  body?: AddMenuDto;
  path?: never;
  query?: never;
  url: "/api/v1/Menu/AddMenus";
};

export type PostApiV1MenuAddMenusErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1MenuAddMenusError =
  PostApiV1MenuAddMenusErrors[keyof PostApiV1MenuAddMenusErrors];

export type PostApiV1MenuAddMenusResponses = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1MenuAddMenusResponse =
  PostApiV1MenuAddMenusResponses[keyof PostApiV1MenuAddMenusResponses];

export type GetApiV1MenuGetMenusData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/Menu/GetMenus";
};

export type GetApiV1MenuGetMenusErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1MenuGetMenusError =
  GetApiV1MenuGetMenusErrors[keyof GetApiV1MenuGetMenusErrors];

export type GetApiV1MenuGetMenusResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type GetApiV1MenuGetMenusResponse =
  GetApiV1MenuGetMenusResponses[keyof GetApiV1MenuGetMenusResponses];

export type GetApiV1MenuGetAllMenusData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/Menu/GetAllMenus";
};

export type GetApiV1MenuGetAllMenusErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1MenuGetAllMenusError =
  GetApiV1MenuGetAllMenusErrors[keyof GetApiV1MenuGetAllMenusErrors];

export type GetApiV1MenuGetAllMenusResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type GetApiV1MenuGetAllMenusResponse =
  GetApiV1MenuGetAllMenusResponses[keyof GetApiV1MenuGetAllMenusResponses];

export type GetApiV1NotificationGetNotificationTypeData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/Notification/GetNotificationType";
};

export type GetApiV1NotificationGetNotificationTypeErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1NotificationGetNotificationTypeError =
  GetApiV1NotificationGetNotificationTypeErrors[keyof GetApiV1NotificationGetNotificationTypeErrors];

export type GetApiV1NotificationGetNotificationTypeResponses = {
  /**
   * Success
   */
  200: Array<string>;
};

export type GetApiV1NotificationGetNotificationTypeResponse =
  GetApiV1NotificationGetNotificationTypeResponses[keyof GetApiV1NotificationGetNotificationTypeResponses];

export type PostApiV1NotificationAddNotificationData = {
  body?: AddNotificationDto;
  path?: never;
  query?: never;
  url: "/api/v1/Notification/AddNotification";
};

export type PostApiV1NotificationAddNotificationErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1NotificationAddNotificationError =
  PostApiV1NotificationAddNotificationErrors[keyof PostApiV1NotificationAddNotificationErrors];

export type PostApiV1NotificationAddNotificationResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PostApiV1NotificationAddNotificationResponse =
  PostApiV1NotificationAddNotificationResponses[keyof PostApiV1NotificationAddNotificationResponses];

export type GetApiV1NotificationGetNotificationsData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/Notification/GetNotifications";
};

export type GetApiV1NotificationGetNotificationsErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1NotificationGetNotificationsError =
  GetApiV1NotificationGetNotificationsErrors[keyof GetApiV1NotificationGetNotificationsErrors];

export type GetApiV1NotificationGetNotificationsResponses = {
  /**
   * Success
   */
  200: Array<NotificationDto>;
};

export type GetApiV1NotificationGetNotificationsResponse =
  GetApiV1NotificationGetNotificationsResponses[keyof GetApiV1NotificationGetNotificationsResponses];

export type PostApiV1OrderAddOrderData = {
  body?: Array<AddProductToOrderDto>;
  path?: never;
  query?: never;
  url: "/api/v1/Order/AddOrder";
};

export type PostApiV1OrderAddOrderErrors = {
  /**
   * Not Found
   */
  404: ApiResult;
};

export type PostApiV1OrderAddOrderError =
  PostApiV1OrderAddOrderErrors[keyof PostApiV1OrderAddOrderErrors];

export type PostApiV1OrderAddOrderResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PostApiV1OrderAddOrderResponse =
  PostApiV1OrderAddOrderResponses[keyof PostApiV1OrderAddOrderResponses];

export type GetApiV1OrderFilterOrderData = {
  body?: never;
  path?: never;
  query?: {
    IsPaid?: PaidStatus;
    UserId?: bigint;
    Page?: number;
    PageCount?: number;
    AllEntitiesCount?: number;
    StartPage?: number;
    EndPage?: number;
    TakeEntity?: number;
    SkipEntity?: number;
    HowManyShowPageAfterAndBefore?: number;
    ShowPageCountId?: number;
    Entities?: Array<OrderDto>;
  };
  url: "/api/v1/Order/FilterOrder";
};

export type GetApiV1OrderFilterOrderErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1OrderFilterOrderError =
  GetApiV1OrderFilterOrderErrors[keyof GetApiV1OrderFilterOrderErrors];

export type GetApiV1OrderFilterOrderResponses = {
  /**
   * Success
   */
  200: FilterOrderDtoApiResult;
};

export type GetApiV1OrderFilterOrderResponse =
  GetApiV1OrderFilterOrderResponses[keyof GetApiV1OrderFilterOrderResponses];

export type GetApiV1OrderFilterUserOrderData = {
  body?: never;
  path?: never;
  query?: {
    IsPaid?: PaidStatus;
    UserId?: bigint;
    Page?: number;
    PageCount?: number;
    AllEntitiesCount?: number;
    StartPage?: number;
    EndPage?: number;
    TakeEntity?: number;
    SkipEntity?: number;
    HowManyShowPageAfterAndBefore?: number;
    ShowPageCountId?: number;
    Entities?: Array<OrderDto>;
  };
  url: "/api/v1/Order/FilterUserOrder";
};

export type GetApiV1OrderFilterUserOrderErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1OrderFilterUserOrderError =
  GetApiV1OrderFilterUserOrderErrors[keyof GetApiV1OrderFilterUserOrderErrors];

export type GetApiV1OrderFilterUserOrderResponses = {
  /**
   * Success
   */
  200: FilterOrderDtoApiResult;
};

export type GetApiV1OrderFilterUserOrderResponse =
  GetApiV1OrderFilterUserOrderResponses[keyof GetApiV1OrderFilterUserOrderResponses];

export type GetApiV1ProductGetProductByFilterData = {
  body?: never;
  path?: never;
  query?: {
    CategoryId?: bigint;
    ProductName?: string;
    Page?: number;
    PageCount?: number;
    AllEntitiesCount?: number;
    StartPage?: number;
    EndPage?: number;
    TakeEntity?: number;
    SkipEntity?: number;
    HowManyShowPageAfterAndBefore?: number;
    ShowPageCountId?: number;
    Entities?: Array<ProductDto>;
  };
  url: "/api/v1/Product/GetProductByFilter";
};

export type GetApiV1ProductGetProductByFilterResponses = {
  /**
   * Success
   */
  200: FilterProductDtoApiResult;
};

export type GetApiV1ProductGetProductByFilterResponse =
  GetApiV1ProductGetProductByFilterResponses[keyof GetApiV1ProductGetProductByFilterResponses];

export type PostApiV1ProductAddProductData = {
  body?: AddProductDto;
  path?: never;
  query?: never;
  url: "/api/v1/Product/AddProduct";
};

export type PostApiV1ProductAddProductResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PostApiV1ProductAddProductResponse =
  PostApiV1ProductAddProductResponses[keyof PostApiV1ProductAddProductResponses];

export type PostApiV1ProductAddVpnProductData = {
  body?: {
    ProductName: string;
    Price: bigint;
    CategoryId?: bigint;
    Description?: string;
    Avatar?: Blob | File;
    "VpnDto.CountryIds"?: Array<bigint>;
    "VpnDto.NumberUser"?: bigint;
    "VpnDto.Days"?: bigint;
    "VpnDto.TotalGb"?: bigint;
  };
  path?: never;
  query?: never;
  url: "/api/v1/Product/AddVpnProduct";
};

export type PostApiV1ProductAddVpnProductResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PostApiV1ProductAddVpnProductResponse =
  PostApiV1ProductAddVpnProductResponses[keyof PostApiV1ProductAddVpnProductResponses];

export type PostApiV1RegistryAddData = {
  body?: AddRegistryDto;
  path?: never;
  query?: never;
  url: "/api/v1/Registry/Add";
};

export type PostApiV1RegistryAddErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1RegistryAddError =
  PostApiV1RegistryAddErrors[keyof PostApiV1RegistryAddErrors];

export type PostApiV1RegistryAddResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PostApiV1RegistryAddResponse =
  PostApiV1RegistryAddResponses[keyof PostApiV1RegistryAddResponses];

export type GetApiV1RegistryFilterData = {
  body?: never;
  path?: never;
  query?: {
    Imei?: string;
    Status?: RegistryStatus;
    Page?: number;
    PageCount?: number;
    AllEntitiesCount?: number;
    StartPage?: number;
    EndPage?: number;
    TakeEntity?: number;
    SkipEntity?: number;
    HowManyShowPageAfterAndBefore?: number;
    ShowPageCountId?: number;
    Entities?: Array<RegistryDto>;
  };
  url: "/api/v1/Registry/Filter";
};

export type GetApiV1RegistryFilterErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1RegistryFilterError =
  GetApiV1RegistryFilterErrors[keyof GetApiV1RegistryFilterErrors];

export type GetApiV1RegistryFilterResponses = {
  /**
   * Success
   */
  200: FilterRegistryDtoApiResult;
};

export type GetApiV1RegistryFilterResponse =
  GetApiV1RegistryFilterResponses[keyof GetApiV1RegistryFilterResponses];

export type GetApiV1RegistryFilterAllData = {
  body?: never;
  path?: never;
  query?: {
    Imei?: string;
    Status?: RegistryStatus;
    Page?: number;
    PageCount?: number;
    AllEntitiesCount?: number;
    StartPage?: number;
    EndPage?: number;
    TakeEntity?: number;
    SkipEntity?: number;
    HowManyShowPageAfterAndBefore?: number;
    ShowPageCountId?: number;
    Entities?: Array<RegistryDto>;
  };
  url: "/api/v1/Registry/FilterAll";
};

export type GetApiV1RegistryFilterAllErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1RegistryFilterAllError =
  GetApiV1RegistryFilterAllErrors[keyof GetApiV1RegistryFilterAllErrors];

export type GetApiV1RegistryFilterAllResponses = {
  /**
   * Success
   */
  200: FilterRegistryDtoApiResult;
};

export type GetApiV1RegistryFilterAllResponse =
  GetApiV1RegistryFilterAllResponses[keyof GetApiV1RegistryFilterAllResponses];

export type PutApiV1RegistryUpdateData = {
  body?: RegistryAmountModelDto;
  path?: never;
  query?: never;
  url: "/api/v1/Registry/Update";
};

export type PutApiV1RegistryUpdateErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PutApiV1RegistryUpdateError =
  PutApiV1RegistryUpdateErrors[keyof PutApiV1RegistryUpdateErrors];

export type PutApiV1RegistryUpdateResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PutApiV1RegistryUpdateResponse =
  PutApiV1RegistryUpdateResponses[keyof PutApiV1RegistryUpdateResponses];

export type PostApiV1RegistryUploadRegistryTransactionImagesData = {
  body?: {
    Id?: bigint;
    Images?: Array<Blob | File>;
  };
  path?: never;
  query?: never;
  url: "/api/v1/Registry/UploadRegistryTransactionImages";
};

export type PostApiV1RegistryUploadRegistryTransactionImagesErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1RegistryUploadRegistryTransactionImagesError =
  PostApiV1RegistryUploadRegistryTransactionImagesErrors[keyof PostApiV1RegistryUploadRegistryTransactionImagesErrors];

export type PostApiV1RegistryUploadRegistryTransactionImagesResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PostApiV1RegistryUploadRegistryTransactionImagesResponse =
  PostApiV1RegistryUploadRegistryTransactionImagesResponses[keyof PostApiV1RegistryUploadRegistryTransactionImagesResponses];

export type GetApiV1SanaeiGetInboundsListData = {
  body?: never;
  path?: never;
  query?: {
    serverId?: bigint;
  };
  url: "/api/v1/Sanaei/GetInboundsList";
};

export type GetApiV1SanaeiGetInboundsListErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1SanaeiGetInboundsListError =
  GetApiV1SanaeiGetInboundsListErrors[keyof GetApiV1SanaeiGetInboundsListErrors];

export type GetApiV1SanaeiGetInboundsListResponses = {
  /**
   * Success
   */
  200: SanaeiInboundDtoListApiResult;
};

export type GetApiV1SanaeiGetInboundsListResponse =
  GetApiV1SanaeiGetInboundsListResponses[keyof GetApiV1SanaeiGetInboundsListResponses];

export type GetApiV1SanaeiGetInboundsByIdData = {
  body?: never;
  path?: never;
  query?: {
    serverId?: bigint;
    inboundId?: bigint;
  };
  url: "/api/v1/Sanaei/GetInboundsById";
};

export type GetApiV1SanaeiGetInboundsByIdErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1SanaeiGetInboundsByIdError =
  GetApiV1SanaeiGetInboundsByIdErrors[keyof GetApiV1SanaeiGetInboundsByIdErrors];

export type GetApiV1SanaeiGetInboundsByIdResponses = {
  /**
   * Success
   */
  200: InboundDtoApiResult;
};

export type GetApiV1SanaeiGetInboundsByIdResponse =
  GetApiV1SanaeiGetInboundsByIdResponses[keyof GetApiV1SanaeiGetInboundsByIdResponses];

export type PostApiV1SanaeiAddInboundData = {
  body?: AddInboundDto;
  path?: never;
  query?: never;
  url: "/api/v1/Sanaei/AddInbound";
};

export type PostApiV1SanaeiAddInboundErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1SanaeiAddInboundError =
  PostApiV1SanaeiAddInboundErrors[keyof PostApiV1SanaeiAddInboundErrors];

export type PostApiV1SanaeiAddInboundResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PostApiV1SanaeiAddInboundResponse =
  PostApiV1SanaeiAddInboundResponses[keyof PostApiV1SanaeiAddInboundResponses];

export type PutApiV1SanaeiUpdateInboundData = {
  body?: UpdateInboundDto;
  path?: never;
  query?: never;
  url: "/api/v1/Sanaei/UpdateInbound";
};

export type PutApiV1SanaeiUpdateInboundErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PutApiV1SanaeiUpdateInboundError =
  PutApiV1SanaeiUpdateInboundErrors[keyof PutApiV1SanaeiUpdateInboundErrors];

export type PutApiV1SanaeiUpdateInboundResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PutApiV1SanaeiUpdateInboundResponse =
  PutApiV1SanaeiUpdateInboundResponses[keyof PutApiV1SanaeiUpdateInboundResponses];

export type DeleteApiV1SanaeiDeleteInboundData = {
  body?: never;
  path?: never;
  query?: {
    inboundId?: bigint;
  };
  url: "/api/v1/Sanaei/DeleteInbound";
};

export type DeleteApiV1SanaeiDeleteInboundErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type DeleteApiV1SanaeiDeleteInboundError =
  DeleteApiV1SanaeiDeleteInboundErrors[keyof DeleteApiV1SanaeiDeleteInboundErrors];

export type DeleteApiV1SanaeiDeleteInboundResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type DeleteApiV1SanaeiDeleteInboundResponse =
  DeleteApiV1SanaeiDeleteInboundResponses[keyof DeleteApiV1SanaeiDeleteInboundResponses];

export type PostApiV1SanaeiGetClientConfigData = {
  body?: GetClientDto;
  path?: never;
  query?: never;
  url: "/api/v1/Sanaei/GetClientConfig";
};

export type PostApiV1SanaeiGetClientConfigResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PostApiV1SanaeiGetClientConfigResponse =
  PostApiV1SanaeiGetClientConfigResponses[keyof PostApiV1SanaeiGetClientConfigResponses];

export type PostApiV1ServerAddServerData = {
  body?: AddServerDto;
  path?: never;
  query?: never;
  url: "/api/v1/Server/AddServer";
};

export type PostApiV1ServerAddServerErrors = {
  /**
   * Bad Request
   */
  400: ApiResult;
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1ServerAddServerError =
  PostApiV1ServerAddServerErrors[keyof PostApiV1ServerAddServerErrors];

export type PostApiV1ServerAddServerResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PostApiV1ServerAddServerResponse =
  PostApiV1ServerAddServerResponses[keyof PostApiV1ServerAddServerResponses];

export type GetApiV1ServerGetServersData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/Server/GetServers";
};

export type GetApiV1ServerGetServersErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1ServerGetServersError =
  GetApiV1ServerGetServersErrors[keyof GetApiV1ServerGetServersErrors];

export type GetApiV1ServerGetServersResponses = {
  /**
   * Success
   */
  200: ServerDtoListApiResult;
};

export type GetApiV1ServerGetServersResponse =
  GetApiV1ServerGetServersResponses[keyof GetApiV1ServerGetServersResponses];

export type GetApiV1ServerGetServerByIdData = {
  body?: never;
  path?: never;
  query?: {
    id?: bigint;
  };
  url: "/api/v1/Server/GetServerById";
};

export type GetApiV1ServerGetServerByIdErrors = {
  /**
   * Server Error
   */
  500: ApiResult;
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1ServerGetServerByIdError =
  GetApiV1ServerGetServerByIdErrors[keyof GetApiV1ServerGetServerByIdErrors];

export type GetApiV1ServerGetServerByIdResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type GetApiV1ServerGetServerByIdResponse =
  GetApiV1ServerGetServerByIdResponses[keyof GetApiV1ServerGetServerByIdResponses];

export type GetApiV1ServerFilterServersData = {
  body?: never;
  path?: never;
  query?: {
    ServerAddress?: string;
    ServerName?: string;
    Page?: number;
    PageCount?: number;
    AllEntitiesCount?: number;
    StartPage?: number;
    EndPage?: number;
    TakeEntity?: number;
    SkipEntity?: number;
    HowManyShowPageAfterAndBefore?: number;
    ShowPageCountId?: number;
    Entities?: Array<ServerDto>;
  };
  url: "/api/v1/Server/FilterServers";
};

export type GetApiV1ServerFilterServersErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1ServerFilterServersError =
  GetApiV1ServerFilterServersErrors[keyof GetApiV1ServerFilterServersErrors];

export type GetApiV1ServerFilterServersResponses = {
  /**
   * Success
   */
  200: FilterServerDtoApiResult;
};

export type GetApiV1ServerFilterServersResponse =
  GetApiV1ServerFilterServersResponses[keyof GetApiV1ServerFilterServersResponses];

export type PostApiV1TelegramAddTelegramBotData = {
  body?: AddTelegramBotDto;
  path?: never;
  query?: never;
  url: "/api/v1/Telegram/AddTelegramBot";
};

export type PostApiV1TelegramAddTelegramBotErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1TelegramAddTelegramBotError =
  PostApiV1TelegramAddTelegramBotErrors[keyof PostApiV1TelegramAddTelegramBotErrors];

export type PostApiV1TelegramAddTelegramBotResponses = {
  /**
   * Success
   */
  200: AddTelegramBotDto;
};

export type PostApiV1TelegramAddTelegramBotResponse =
  PostApiV1TelegramAddTelegramBotResponses[keyof PostApiV1TelegramAddTelegramBotResponses];

export type PutApiV1TelegramStopTelegramBotByIdData = {
  body?: never;
  path: {
    id: bigint;
  };
  query?: never;
  url: "/api/v1/Telegram/StopTelegramBot/{id}";
};

export type PutApiV1TelegramStopTelegramBotByIdResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PutApiV1TelegramStopTelegramBotByIdResponse =
  PutApiV1TelegramStopTelegramBotByIdResponses[keyof PutApiV1TelegramStopTelegramBotByIdResponses];

export type PutApiV1TelegramStartTelegramBotByIdData = {
  body?: never;
  path: {
    id: bigint;
  };
  query?: never;
  url: "/api/v1/Telegram/StartTelegramBot/{id}";
};

export type PutApiV1TelegramStartTelegramBotByIdResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PutApiV1TelegramStartTelegramBotByIdResponse =
  PutApiV1TelegramStartTelegramBotByIdResponses[keyof PutApiV1TelegramStartTelegramBotByIdResponses];

export type PostApiV1TransactionAddTransactionData = {
  body?: {
    Title?: string;
    Price: bigint;
    Description?: string;
    TransactionType: TransactionType;
    AccountName?: string;
    TransactionTime?: Date;
    CardNumber?: string;
    BankName?: string;
    AvatarTransaction?: Blob | File;
    TransactionDetailId?: bigint;
  };
  path?: never;
  query?: never;
  url: "/api/v1/Transaction/AddTransaction";
};

export type PostApiV1TransactionAddTransactionErrors = {
  /**
   * Not Found
   */
  404: ApiResult;
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1TransactionAddTransactionError =
  PostApiV1TransactionAddTransactionErrors[keyof PostApiV1TransactionAddTransactionErrors];

export type PostApiV1TransactionAddTransactionResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PostApiV1TransactionAddTransactionResponse =
  PostApiV1TransactionAddTransactionResponses[keyof PostApiV1TransactionAddTransactionResponses];

export type PutApiV1TransactionUpdateTransactionStatusData = {
  body?: UpdateTransactionStatusDto;
  path?: never;
  query?: never;
  url: "/api/v1/Transaction/UpdateTransactionStatus";
};

export type PutApiV1TransactionUpdateTransactionStatusErrors = {
  /**
   * Not Found
   */
  404: ApiResult;
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PutApiV1TransactionUpdateTransactionStatusError =
  PutApiV1TransactionUpdateTransactionStatusErrors[keyof PutApiV1TransactionUpdateTransactionStatusErrors];

export type PutApiV1TransactionUpdateTransactionStatusResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PutApiV1TransactionUpdateTransactionStatusResponse =
  PutApiV1TransactionUpdateTransactionStatusResponses[keyof PutApiV1TransactionUpdateTransactionStatusResponses];

export type GetApiV1TransactionFilterTransactionData = {
  body?: never;
  path?: never;
  query?: {
    Type?: TransactionType;
    Status?: TransactionStatus;
    Details?: bigint;
    StartDate?: Date;
    EndDate?: Date;
    UserId?: bigint;
    Page?: number;
    PageCount?: number;
    AllEntitiesCount?: number;
    StartPage?: number;
    EndPage?: number;
    TakeEntity?: number;
    SkipEntity?: number;
    HowManyShowPageAfterAndBefore?: number;
    ShowPageCountId?: number;
    Entities?: Array<TransactionDto>;
  };
  url: "/api/v1/Transaction/FilterTransaction";
};

export type GetApiV1TransactionFilterTransactionErrors = {
  /**
   * Not Found
   */
  404: ApiResult;
};

export type GetApiV1TransactionFilterTransactionError =
  GetApiV1TransactionFilterTransactionErrors[keyof GetApiV1TransactionFilterTransactionErrors];

export type GetApiV1TransactionFilterTransactionResponses = {
  /**
   * Success
   */
  200: FilterTransactionDtoApiResult;
};

export type GetApiV1TransactionFilterTransactionResponse =
  GetApiV1TransactionFilterTransactionResponses[keyof GetApiV1TransactionFilterTransactionResponses];

export type GetApiV1TransactionGetTransactionByIdData = {
  body?: never;
  path: {
    id: bigint;
  };
  query?: never;
  url: "/api/v1/Transaction/GetTransaction/{id}";
};

export type GetApiV1TransactionGetTransactionByIdErrors = {
  /**
   * Not Found
   */
  404: ApiResult;
};

export type GetApiV1TransactionGetTransactionByIdError =
  GetApiV1TransactionGetTransactionByIdErrors[keyof GetApiV1TransactionGetTransactionByIdErrors];

export type GetApiV1TransactionGetTransactionByIdResponses = {
  /**
   * Success
   */
  200: TransactionDtoApiResult;
};

export type GetApiV1TransactionGetTransactionByIdResponse =
  GetApiV1TransactionGetTransactionByIdResponses[keyof GetApiV1TransactionGetTransactionByIdResponses];

export type PostApiV1TransactionAddTransactionDetailData = {
  body?: AddTransactionDetailDto;
  path?: never;
  query?: never;
  url: "/api/v1/Transaction/AddTransactionDetail";
};

export type PostApiV1TransactionAddTransactionDetailErrors = {
  /**
   * Not Found
   */
  404: ApiResult;
};

export type PostApiV1TransactionAddTransactionDetailError =
  PostApiV1TransactionAddTransactionDetailErrors[keyof PostApiV1TransactionAddTransactionDetailErrors];

export type PostApiV1TransactionAddTransactionDetailResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PostApiV1TransactionAddTransactionDetailResponse =
  PostApiV1TransactionAddTransactionDetailResponses[keyof PostApiV1TransactionAddTransactionDetailResponses];

export type GetApiV1TransactionGetTransactionDetailData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/Transaction/GetTransactionDetail";
};

export type GetApiV1TransactionGetTransactionDetailErrors = {
  /**
   * Not Found
   */
  404: ApiResult;
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1TransactionGetTransactionDetailError =
  GetApiV1TransactionGetTransactionDetailErrors[keyof GetApiV1TransactionGetTransactionDetailErrors];

export type GetApiV1TransactionGetTransactionDetailResponses = {
  /**
   * Success
   */
  200: TransactionDetailDtoApiResult;
};

export type GetApiV1TransactionGetTransactionDetailResponse =
  GetApiV1TransactionGetTransactionDetailResponses[keyof GetApiV1TransactionGetTransactionDetailResponses];

export type PostApiV1TransactionIncreaseBalanceByUserIdData = {
  body?: AddTransactionDto;
  path: {
    userId: bigint;
  };
  query?: never;
  url: "/api/v1/Transaction/IncreaseBalance/{userId}";
};

export type PostApiV1TransactionIncreaseBalanceByUserIdErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1TransactionIncreaseBalanceByUserIdError =
  PostApiV1TransactionIncreaseBalanceByUserIdErrors[keyof PostApiV1TransactionIncreaseBalanceByUserIdErrors];

export type PostApiV1TransactionIncreaseBalanceByUserIdResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PostApiV1TransactionIncreaseBalanceByUserIdResponse =
  PostApiV1TransactionIncreaseBalanceByUserIdResponses[keyof PostApiV1TransactionIncreaseBalanceByUserIdResponses];

export type PostApiV1TransactionDecreaseBalanceByUserIdData = {
  body?: AddTransactionDto;
  path: {
    userId: bigint;
  };
  query?: never;
  url: "/api/v1/Transaction/DecreaseBalance/{userId}";
};

export type PostApiV1TransactionDecreaseBalanceByUserIdErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1TransactionDecreaseBalanceByUserIdError =
  PostApiV1TransactionDecreaseBalanceByUserIdErrors[keyof PostApiV1TransactionDecreaseBalanceByUserIdErrors];

export type PostApiV1TransactionDecreaseBalanceByUserIdResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PostApiV1TransactionDecreaseBalanceByUserIdResponse =
  PostApiV1TransactionDecreaseBalanceByUserIdResponses[keyof PostApiV1TransactionDecreaseBalanceByUserIdResponses];

export type PostApiV1UserLoginData = {
  body?: LoginUserDto;
  path?: never;
  query?: never;
  url: "/api/v1/User/Login";
};

export type PostApiV1UserLoginErrors = {
  /**
   * Not Found
   */
  404: ApiResult;
};

export type PostApiV1UserLoginError =
  PostApiV1UserLoginErrors[keyof PostApiV1UserLoginErrors];

export type PostApiV1UserLoginResponses = {
  /**
   * Success
   */
  200: LoginUserResponseDtoApiResult;
};

export type PostApiV1UserLoginResponse =
  PostApiV1UserLoginResponses[keyof PostApiV1UserLoginResponses];

export type PostApiV1UserRegisterData = {
  body?: RegisterUserDto;
  path?: never;
  query?: never;
  url: "/api/v1/User/Register";
};

export type PostApiV1UserRegisterErrors = {
  /**
   * Not Found
   */
  404: ApiResult;
};

export type PostApiV1UserRegisterError =
  PostApiV1UserRegisterErrors[keyof PostApiV1UserRegisterErrors];

export type PostApiV1UserRegisterResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PostApiV1UserRegisterResponse =
  PostApiV1UserRegisterResponses[keyof PostApiV1UserRegisterResponses];

export type PostApiV1UserForgetPasswordData = {
  body?: ForgetUserPasswordDto;
  path?: never;
  query?: never;
  url: "/api/v1/User/ForgetPassword";
};

export type PostApiV1UserForgetPasswordErrors = {
  /**
   * Bad Request
   */
  400: ApiResult;
  /**
   * Not Found
   */
  404: ApiResult;
};

export type PostApiV1UserForgetPasswordError =
  PostApiV1UserForgetPasswordErrors[keyof PostApiV1UserForgetPasswordErrors];

export type PostApiV1UserForgetPasswordResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PostApiV1UserForgetPasswordResponse =
  PostApiV1UserForgetPasswordResponses[keyof PostApiV1UserForgetPasswordResponses];

export type GetApiV1UserGetUsersByFilterData = {
  body?: never;
  path?: never;
  query?: {
    FirstName?: string;
    LastName?: string;
    Mobile?: string;
    AgentId?: bigint;
    Username?: string;
    IsAgent?: number;
    Page?: number;
    PageCount?: number;
    AllEntitiesCount?: number;
    StartPage?: number;
    EndPage?: number;
    TakeEntity?: number;
    SkipEntity?: number;
    HowManyShowPageAfterAndBefore?: number;
    ShowPageCountId?: number;
    Entities?: Array<UserDto>;
  };
  url: "/api/v1/User/GetUsersByFilter";
};

export type GetApiV1UserGetUsersByFilterResponses = {
  /**
   * Success
   */
  200: FilterUsersDtoApiResult;
};

export type GetApiV1UserGetUsersByFilterResponse =
  GetApiV1UserGetUsersByFilterResponses[keyof GetApiV1UserGetUsersByFilterResponses];

export type GetApiV1UserGetAgentUsersFilterData = {
  body?: never;
  path?: never;
  query?: {
    FirstName?: string;
    LastName?: string;
    Mobile?: string;
    AgentId?: bigint;
    Username?: string;
    IsAgent?: number;
    Page?: number;
    PageCount?: number;
    AllEntitiesCount?: number;
    StartPage?: number;
    EndPage?: number;
    TakeEntity?: number;
    SkipEntity?: number;
    HowManyShowPageAfterAndBefore?: number;
    ShowPageCountId?: number;
    Entities?: Array<UserDto>;
  };
  url: "/api/v1/User/GetAgentUsersFilter";
};

export type GetApiV1UserGetAgentUsersFilterResponses = {
  /**
   * Success
   */
  200: FilterUsersDtoApiResult;
};

export type GetApiV1UserGetAgentUsersFilterResponse =
  GetApiV1UserGetAgentUsersFilterResponses[keyof GetApiV1UserGetAgentUsersFilterResponses];

export type GetApiV1UserGetInformationData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/User/GetInformation";
};

export type GetApiV1UserGetInformationErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1UserGetInformationError =
  GetApiV1UserGetInformationErrors[keyof GetApiV1UserGetInformationErrors];

export type GetApiV1UserGetInformationResponses = {
  /**
   * Success
   */
  200: UserInformationDtoApiResult;
  /**
   * No Content
   */
  204: ApiResult;
};

export type GetApiV1UserGetInformationResponse =
  GetApiV1UserGetInformationResponses[keyof GetApiV1UserGetInformationResponses];

export type GetApiV1UserGetUserByIdData = {
  body?: never;
  path: {
    id: bigint;
  };
  query?: never;
  url: "/api/v1/User/GetUser/{id}";
};

export type GetApiV1UserGetUserByIdErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1UserGetUserByIdError =
  GetApiV1UserGetUserByIdErrors[keyof GetApiV1UserGetUserByIdErrors];

export type GetApiV1UserGetUserByIdResponses = {
  /**
   * Success
   */
  200: UserDtoApiResult;
  /**
   * No Content
   */
  204: ApiResult;
};

export type GetApiV1UserGetUserByIdResponse =
  GetApiV1UserGetUserByIdResponses[keyof GetApiV1UserGetUserByIdResponses];

export type GetApiV1UserGetMeData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/User/GetMe";
};

export type GetApiV1UserGetMeErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1UserGetMeError =
  GetApiV1UserGetMeErrors[keyof GetApiV1UserGetMeErrors];

export type GetApiV1UserGetMeResponses = {
  /**
   * Success
   */
  200: UserDtoApiResult;
  /**
   * No Content
   */
  204: ApiResult;
};

export type GetApiV1UserGetMeResponse =
  GetApiV1UserGetMeResponses[keyof GetApiV1UserGetMeResponses];

export type GetApiV1UserGetAgentUsersData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/User/GetAgentUsers";
};

export type GetApiV1UserGetAgentUsersErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1UserGetAgentUsersError =
  GetApiV1UserGetAgentUsersErrors[keyof GetApiV1UserGetAgentUsersErrors];

export type GetApiV1UserGetAgentUsersResponses = {
  /**
   * Success
   */
  200: UserDtoListApiResult;
  /**
   * No Content
   */
  204: ApiResult;
};

export type GetApiV1UserGetAgentUsersResponse =
  GetApiV1UserGetAgentUsersResponses[keyof GetApiV1UserGetAgentUsersResponses];

export type PutApiV1UserUpdateProfileData = {
  body?: {
    Email?: string;
    FirstName: string;
    LastName: string;
    Avatar?: Blob | File;
    Address?: string;
    Mobile?: string;
  };
  path?: never;
  query?: never;
  url: "/api/v1/User/UpdateProfile";
};

export type PutApiV1UserUpdateProfileErrors = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PutApiV1UserUpdateProfileError =
  PutApiV1UserUpdateProfileErrors[keyof PutApiV1UserUpdateProfileErrors];

export type PutApiV1UserUpdateProfileResponses = {
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PutApiV1UserUpdateProfileResponse =
  PutApiV1UserUpdateProfileResponses[keyof PutApiV1UserUpdateProfileResponses];

export type PutApiV1UserUpdateUserData = {
  body?: UpdateUserDto;
  path?: never;
  query?: never;
  url: "/api/v1/User/UpdateUser";
};

export type PutApiV1UserUpdateUserErrors = {
  /**
   * Bad Request
   */
  400: ApiResult;
  /**
   * Not Found
   */
  404: ApiResult;
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PutApiV1UserUpdateUserError =
  PutApiV1UserUpdateUserErrors[keyof PutApiV1UserUpdateUserErrors];

export type PutApiV1UserUpdateUserResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PutApiV1UserUpdateUserResponse =
  PutApiV1UserUpdateUserResponses[keyof PutApiV1UserUpdateUserResponses];

export type PostApiV1UserSendMobileActiveCodeData = {
  body?: never;
  path?: never;
  query?: {
    phone?: string;
  };
  url: "/api/v1/User/SendMobileActiveCode";
};

export type PostApiV1UserSendMobileActiveCodeErrors = {
  /**
   * Bad Request
   */
  400: ApiResult;
  /**
   * Not Found
   */
  404: ApiResult;
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1UserSendMobileActiveCodeError =
  PostApiV1UserSendMobileActiveCodeErrors[keyof PostApiV1UserSendMobileActiveCodeErrors];

export type PostApiV1UserSendMobileActiveCodeResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PostApiV1UserSendMobileActiveCodeResponse =
  PostApiV1UserSendMobileActiveCodeResponses[keyof PostApiV1UserSendMobileActiveCodeResponses];

export type PostApiV1UserAddUserData = {
  body?: {
    Email?: string;
    Mobile: string;
    IsMobileActive?: boolean;
    FirstName: string;
    LastName: string;
    Avatar?: Blob | File;
    Address?: string;
  };
  path?: never;
  query?: never;
  url: "/api/v1/User/AddUser";
};

export type PostApiV1UserAddUserErrors = {
  /**
   * Bad Request
   */
  400: ApiResult;
  /**
   * Not Found
   */
  404: ApiResult;
  /**
   * Error
   */
  default: ProblemDetails;
};

export type PostApiV1UserAddUserError =
  PostApiV1UserAddUserErrors[keyof PostApiV1UserAddUserErrors];

export type PostApiV1UserAddUserResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PostApiV1UserAddUserResponse =
  PostApiV1UserAddUserResponses[keyof PostApiV1UserAddUserResponses];

export type GetApiV1VpnGetVpnsData = {
  body?: never;
  path?: never;
  query?: {
    Page?: number;
    PageCount?: number;
    AllEntitiesCount?: number;
    StartPage?: number;
    EndPage?: number;
    TakeEntity?: number;
    SkipEntity?: number;
    HowManyShowPageAfterAndBefore?: number;
    ShowPageCountId?: number;
    Entities?: Array<VpnDto>;
  };
  url: "/api/v1/Vpn/GetVpns";
};

export type GetApiV1VpnGetVpnsErrors = {
  /**
   * Bad Request
   */
  400: ApiResult;
  /**
   * Not Found
   */
  404: ApiResult;
  /**
   * Error
   */
  default: ProblemDetails;
};

export type GetApiV1VpnGetVpnsError =
  GetApiV1VpnGetVpnsErrors[keyof GetApiV1VpnGetVpnsErrors];

export type GetApiV1VpnGetVpnsResponses = {
  /**
   * Success
   */
  200: FilterVpnDtoApiResult;
};

export type GetApiV1VpnGetVpnsResponse =
  GetApiV1VpnGetVpnsResponses[keyof GetApiV1VpnGetVpnsResponses];

export type PostApiV1VpnBuyVpnData = {
  body?: BuyMarzbanVpnDto;
  path?: never;
  query?: never;
  url: "/api/v1/Vpn/BuyVpn";
};

export type PostApiV1VpnBuyVpnResponses = {
  /**
   * Success
   */
  200: ApiResult;
};

export type PostApiV1VpnBuyVpnResponse =
  PostApiV1VpnBuyVpnResponses[keyof PostApiV1VpnBuyVpnResponses];

export type ClientOptions = {
  baseURL: "https://test.samanii.com" | (string & {});
};
